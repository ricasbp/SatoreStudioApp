  .headsets{
    margin-left: 2%;
    list-style-type: none;  /* no bullet points */
    padding-bottom: 0;


    display: grid; /* Grid is flexbox but in 2d */
    grid-template-columns: 600px 250px; /* Two clumns, each with X px */
    column-gap: 15px;
    row-gap: 15px;
  }
  
  
  .headsets li {
    color: #000000;
    background-color: #ffffff;
    border-radius: 10px;
    overflow: hidden; /* Ensures rounded corners contain child elements */
    position: relative; /* Ensure positioning context for absolute children */
    


    /* Set width and height */
    width: 600px;
    height: 250px;

    display: grid; /* Grid is flexbox but in 2d */
    grid-template-columns:  140px 120px; /* Two clumns, each with X px */

    /*The align-self and align-items properties control alignment on the block axis.*/
    align-items: end; 
    /*justify-items and justify-self do the same job on the inline axis*/
    

    /* Shadow with: right, bottom, blur, color and alpha*/
    box-shadow: 0px 4px 5px rgb(0, 0, 0, 25%); 
  
    /* Fade-In Animation */
    opacity: 0; /* Ensure the items are initially invisible */
    animation: vrFadeIn 1s ease-in-out forwards; /* Duration and easing function */
    animation-delay: 0s; /* No delay for the first item */
    animation-fill-mode: forwards; /* Keep the end state */
  }


  
  /* KeyFrames Animation */
  @keyframes vrFadeIn{
    0% {
      opacity: 0%;
    }
    100% {
      opacity: 100%;
    }
  }
  
  
  
  /* TODO: This should be done dinamically*/
  /* Here is a good 
  tutorial: https://www.youtube.com/watch?v=l_sRhY3uRYQ&ab_channel=CSSDevandUX */
  /* Apply a staggered delay to each li element */
  .headsets li:nth-child(1) {
    animation-delay: 0s;
  }
  
  .headsets li:nth-child(2) {
    animation-delay: 0.5s; /* 0.5 seconds delay */
  }
  
  .headsets li:nth-child(3) {
    animation-delay: 1s; /* 1 second delay */
  }
  
  .headsets li:nth-child(4) {
    animation-delay: 1.5s; /* 1.5 seconds delay */
  }
  
  .headsets li:nth-child(5) {
    animation-delay: 2s; /* 2 seconds delay */
  }
  
  .headsets li:nth-child(6) {
    animation-delay: 2.5s; /* 2.5 seconds delay */
  }
 /* 
    CSS for the Status Text
  */

  div.name{
    width: 200px; /*Make sure status is inline*/
  }
  
  .headsets .status{
    margin-left: 8%;
    width: 200px;
  }
  
  .headsets .online-class .status{
    color: #289900;
    font-weight: bold;
  }

  .headsets .offline-class{
    color: #868686;
  }

  .headsets li.offline-class {
    background-color: #efefef;
    box-shadow: 0px 0px 0px; 
  }

  
  .headsets .ready-class .status{
    color: rgb(255, 106, 0); 
    font-weight: bold;
  }
  
  .headsets .error-class .status{
    color: rgb(255, 0, 0);
    font-weight: bold;
  }
  
  .headsets .running-experience-class .status{
    color: #289900;
    font-weight: bold;
  }
  
  .headsets li.running-experience-class {
    background-color: #D0FFD7; 
  }

  /* 
    CSS for the Upload Button
  */
  .image-container-button {
    background-color: #D9D9D9; /* Background color for the list items */
    border-radius: 10px;
    padding: 1%;
    margin: 2%;
    margin-right: 3%;
    margin-left: auto;  /* Push button to the far-right */
  
 
    cursor: pointer; /* Change cursor to pointer on hover */
    box-shadow: 0px 4px 5px rgb(0, 0, 0, 25%); /* right, bottom, blur, color and alpha*/
  }
  
  .image-container-button:hover {
    background-color: #BCBCBC;
  }
  
  .image-container-button:active {
    background-color: #525252;
  }
  
  .image-container-button button {
    background: none; /* Remove default button background */
    border: none; /* Remove default button border */
    padding: 0; /* Remove default button padding */
    /* CSS Center Guide*/
    display: block;
    margin: auto;  
  }
  
  .image-container-button img {
    width: 45px; /* Set a fixed width for the buttons */
    height: 45px; /* Set a fixed height for the buttons */
    /* CSS Center Guide*/
    display: block;  
    margin: auto;
  }
  
  
  /* 
    CSS for the Settings Button
  */
  
  .image-container-button-settings {

    background-color: #D9D9D9; /* Background color for the list items */
    border-radius: 10px;
    padding: 1%;
    margin-left: 3%;
    cursor: pointer; /* Change cursor to pointer on hover */
    box-shadow: 0px 4px 5px rgb(0, 0, 0, 25%); /* right, bottom, blur, color and alpha*/
    
    align-self: start; 
    justify-self: end;
    margin: 10px;

    width: 50px; 
    height: 50px;
}
  
  .image-container-button-settings:hover {
    background-color: #BCBCBC;
  }
  
  .image-container-button-settings:active {
    background-color: #525252;
  }
  
  .image-container-button-settings button {
    background: none; /* Remove default button background */
    border: none; /* Remove default button border */
    padding: 0; /* Remove default button padding */
    width: 25px; 
    height: 25px; 
  }
  
  
  /* 
    CSS for the VR Text 
  */

  .vrinfo1{
    margin: 10px;
  }

  /* 
    CSS for the VRHeadset Images 
  */
  
  .image-container-vr {
    width: 100px;
    height: 65px;

    justify-self: end;
    margin: 10px;
  }

  .image-container-vr img{
    width: 100px;
    height: 65px;
  }

  
  /* 
    CSS for the container for the Add VR Button and Switch 
  */
  
  .container-for-addButton-and-switch{
    display: flex;
    align-items: center; /* Align items vertically centered */
  }

  /* 
    CSS for the Add VR Button
  */
  
  .image-container-button-add {
    border-radius: 50px;
    box-shadow: 0px 4px 5px rgb(0, 0, 0, 25%); /* right, bottom, blur, color and alpha*/
    
    width: 45px; /* Set a fixed width for the buttons */
    height: 45px; /* Set a fixed height for the buttons */
    cursor: pointer; /* Change cursor to pointer on hover */
  
  
    /* CSS Center Guide*/
    display: block;  
    margin: auto;
  }
  
  .image-container-button-add:hover {
    background-color: #BCBCBC;
  }

  /* 
    CSS for the Switch 
  */
  
   /* The switch - the box around the slider */
   .switch {
    margin-right: 3%;
    box-shadow: 0px 4px 5px rgb(0, 0, 0, 25%); /* right, bottom, blur, color and alpha*/
    border-radius: 25px;
  
    position: relative;
    display: inline-block;
    width: 150px;
    height: 50px;


    align-self: start; 
    margin: 10px;

  }
  
  /* Hide default HTML checkbox */
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 40px;
    width: 40px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: #2196F3;
  }
  
  input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }
  
  input:checked + .slider:before {
    -webkit-transform: translateX(100px);
    -ms-transform: translateX(100px);
    transform: translateX(100px);
  }
  
  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }
  
  .slider.round:before {
    border-radius: 50%;
  } 
  
  
  
