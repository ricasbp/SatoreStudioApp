{"ast":null,"code":"/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js serial transport for osc.js\n *\n * Copyright 2014-2019, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*jshint node:true*/\n\nvar osc = osc || require(\"../osc.js\"),\n  SerialPort = require(\"serialport\").SerialPort;\nosc.supportsSerial = true;\nosc.SerialPort = function (options) {\n  this.on(\"open\", this.listen.bind(this));\n  osc.SLIPPort.call(this, options);\n  this.options.bitrate = this.options.bitrate || 9600;\n  this.serialPort = options.serialPort;\n  if (this.serialPort) {\n    this.emit(\"open\", this.serialPort);\n  }\n};\nvar p = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);\np.constructor = osc.SerialPort;\np.open = function () {\n  if (this.serialPort) {\n    // If we already have a serial port, close it and open a new one.\n    this.once(\"close\", this.open.bind(this));\n    this.close();\n    return;\n  }\n  var that = this;\n  this.serialPort = new SerialPort({\n    path: this.options.devicePath,\n    baudRate: this.options.bitrate,\n    autoOpen: false\n  });\n  this.serialPort.on(\"error\", function (err) {\n    that.emit(\"error\", err);\n  });\n  this.serialPort.on(\"open\", function () {\n    that.emit(\"open\", that.serialPort);\n  });\n  this.serialPort.open();\n};\np.listen = function () {\n  var that = this;\n  this.serialPort.on(\"data\", function (data) {\n    that.emit(\"data\", data, undefined);\n  });\n  this.serialPort.on(\"close\", function () {\n    that.emit(\"close\");\n  });\n  that.emit(\"ready\");\n};\np.sendRaw = function (encoded) {\n  if (!this.serialPort || !this.serialPort.isOpen) {\n    osc.fireClosedPortSendError(this);\n    return;\n  }\n  var that = this;\n  this.serialPort.write(encoded);\n};\np.close = function () {\n  if (this.serialPort) {\n    this.serialPort.close();\n  }\n};","map":{"version":3,"names":["osc","require","SerialPort","supportsSerial","options","on","listen","bind","SLIPPort","call","bitrate","serialPort","emit","p","prototype","Object","create","constructor","open","once","close","that","path","devicePath","baudRate","autoOpen","err","data","undefined","sendRaw","encoded","isOpen","fireClosedPortSendError","write"],"sources":["C:/Users/tmart/Desktop/Dissertacao/TourOfHeroes/tour-of-heroes-osc.js/tour-of-heroes/node_modules/osc/src/platforms/osc-node-serialport.js"],"sourcesContent":["/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js serial transport for osc.js\n *\n * Copyright 2014-2019, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*jshint node:true*/\n\nvar osc = osc || require(\"../osc.js\"),\n    SerialPort = require(\"serialport\").SerialPort;\n\nosc.supportsSerial = true;\n\nosc.SerialPort = function (options) {\n    this.on(\"open\", this.listen.bind(this));\n    osc.SLIPPort.call(this, options);\n    this.options.bitrate = this.options.bitrate || 9600;\n\n    this.serialPort = options.serialPort;\n    if (this.serialPort) {\n        this.emit(\"open\", this.serialPort);\n    }\n};\n\nvar p = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);\np.constructor = osc.SerialPort;\n\np.open = function () {\n    if (this.serialPort) {\n        // If we already have a serial port, close it and open a new one.\n        this.once(\"close\", this.open.bind(this));\n        this.close();\n        return;\n    }\n\n    var that = this;\n\n    this.serialPort = new SerialPort({\n        path: this.options.devicePath,\n        baudRate: this.options.bitrate,\n        autoOpen: false\n    });\n\n    this.serialPort.on(\"error\", function (err) {\n        that.emit(\"error\", err);\n    });\n\n    this.serialPort.on(\"open\", function () {\n        that.emit(\"open\", that.serialPort);\n    });\n\n    this.serialPort.open();\n};\n\np.listen = function () {\n    var that = this;\n\n    this.serialPort.on(\"data\", function (data) {\n        that.emit(\"data\", data, undefined);\n    });\n\n    this.serialPort.on(\"close\", function () {\n        that.emit(\"close\");\n    });\n\n    that.emit(\"ready\");\n};\n\np.sendRaw = function (encoded) {\n    if (!this.serialPort || !this.serialPort.isOpen) {\n        osc.fireClosedPortSendError(this);\n        return;\n    }\n\n    var that = this;\n    this.serialPort.write(encoded);\n};\n\np.close = function () {\n    if (this.serialPort) {\n        this.serialPort.close();\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,GAAG,GAAGA,GAAG,IAAIC,OAAO,CAAC,WAAW,CAAC;EACjCC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC,CAACC,UAAU;AAEjDF,GAAG,CAACG,cAAc,GAAG,IAAI;AAEzBH,GAAG,CAACE,UAAU,GAAG,UAAUE,OAAO,EAAE;EAChC,IAAI,CAACC,EAAE,CAAC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvCP,GAAG,CAACQ,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAEL,OAAO,CAAC;EAChC,IAAI,CAACA,OAAO,CAACM,OAAO,GAAG,IAAI,CAACN,OAAO,CAACM,OAAO,IAAI,IAAI;EAEnD,IAAI,CAACC,UAAU,GAAGP,OAAO,CAACO,UAAU;EACpC,IAAI,IAAI,CAACA,UAAU,EAAE;IACjB,IAAI,CAACC,IAAI,CAAC,MAAM,EAAE,IAAI,CAACD,UAAU,CAAC;EACtC;AACJ,CAAC;AAED,IAAIE,CAAC,GAAGb,GAAG,CAACE,UAAU,CAACY,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAChB,GAAG,CAACQ,QAAQ,CAACM,SAAS,CAAC;AACxED,CAAC,CAACI,WAAW,GAAGjB,GAAG,CAACE,UAAU;AAE9BW,CAAC,CAACK,IAAI,GAAG,YAAY;EACjB,IAAI,IAAI,CAACP,UAAU,EAAE;IACjB;IACA,IAAI,CAACQ,IAAI,CAAC,OAAO,EAAE,IAAI,CAACD,IAAI,CAACX,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,CAACa,KAAK,CAAC,CAAC;IACZ;EACJ;EAEA,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAI,CAACV,UAAU,GAAG,IAAIT,UAAU,CAAC;IAC7BoB,IAAI,EAAE,IAAI,CAAClB,OAAO,CAACmB,UAAU;IAC7BC,QAAQ,EAAE,IAAI,CAACpB,OAAO,CAACM,OAAO;IAC9Be,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,IAAI,CAACd,UAAU,CAACN,EAAE,CAAC,OAAO,EAAE,UAAUqB,GAAG,EAAE;IACvCL,IAAI,CAACT,IAAI,CAAC,OAAO,EAAEc,GAAG,CAAC;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACf,UAAU,CAACN,EAAE,CAAC,MAAM,EAAE,YAAY;IACnCgB,IAAI,CAACT,IAAI,CAAC,MAAM,EAAES,IAAI,CAACV,UAAU,CAAC;EACtC,CAAC,CAAC;EAEF,IAAI,CAACA,UAAU,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAEDL,CAAC,CAACP,MAAM,GAAG,YAAY;EACnB,IAAIe,IAAI,GAAG,IAAI;EAEf,IAAI,CAACV,UAAU,CAACN,EAAE,CAAC,MAAM,EAAE,UAAUsB,IAAI,EAAE;IACvCN,IAAI,CAACT,IAAI,CAAC,MAAM,EAAEe,IAAI,EAAEC,SAAS,CAAC;EACtC,CAAC,CAAC;EAEF,IAAI,CAACjB,UAAU,CAACN,EAAE,CAAC,OAAO,EAAE,YAAY;IACpCgB,IAAI,CAACT,IAAI,CAAC,OAAO,CAAC;EACtB,CAAC,CAAC;EAEFS,IAAI,CAACT,IAAI,CAAC,OAAO,CAAC;AACtB,CAAC;AAEDC,CAAC,CAACgB,OAAO,GAAG,UAAUC,OAAO,EAAE;EAC3B,IAAI,CAAC,IAAI,CAACnB,UAAU,IAAI,CAAC,IAAI,CAACA,UAAU,CAACoB,MAAM,EAAE;IAC7C/B,GAAG,CAACgC,uBAAuB,CAAC,IAAI,CAAC;IACjC;EACJ;EAEA,IAAIX,IAAI,GAAG,IAAI;EACf,IAAI,CAACV,UAAU,CAACsB,KAAK,CAACH,OAAO,CAAC;AAClC,CAAC;AAEDjB,CAAC,CAACO,KAAK,GAAG,YAAY;EAClB,IAAI,IAAI,CAACT,UAAU,EAAE;IACjB,IAAI,CAACA,UAAU,CAACS,KAAK,CAAC,CAAC;EAC3B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}