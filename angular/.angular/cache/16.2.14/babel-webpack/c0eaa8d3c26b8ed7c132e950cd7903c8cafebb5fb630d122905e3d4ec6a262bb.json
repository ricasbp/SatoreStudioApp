{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCTalkParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * Parse the CCTalk protocol\n * @extends Transform\n *\n * A transform stream that emits CCTalk packets as they are received.\n */\nclass CCTalkParser extends stream_1.Transform {\n  constructor(maxDelayBetweenBytesMs = 50) {\n    super();\n    this.array = [];\n    this.cursor = 0;\n    this.lastByteFetchTime = 0;\n    this.maxDelayBetweenBytesMs = maxDelayBetweenBytesMs;\n  }\n  _transform(buffer, encoding, cb) {\n    if (this.maxDelayBetweenBytesMs > 0) {\n      const now = Date.now();\n      if (now - this.lastByteFetchTime > this.maxDelayBetweenBytesMs) {\n        this.array = [];\n        this.cursor = 0;\n      }\n      this.lastByteFetchTime = now;\n    }\n    this.cursor += buffer.length;\n    // TODO: Better Faster es7 no supported by node 4\n    // ES7 allows directly push [...buffer]\n    // this.array = this.array.concat(Array.from(buffer)) //Slower ?!?\n    Array.from(buffer).map(byte => this.array.push(byte));\n    while (this.cursor > 1 && this.cursor >= this.array[1] + 5) {\n      // full frame accumulated\n      // copy command from the array\n      const FullMsgLength = this.array[1] + 5;\n      const frame = Buffer.from(this.array.slice(0, FullMsgLength));\n      // Preserve Extra Data\n      this.array = this.array.slice(frame.length, this.array.length);\n      this.cursor -= FullMsgLength;\n      this.push(frame);\n    }\n    cb();\n  }\n}\nexports.CCTalkParser = CCTalkParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","CCTalkParser","stream_1","require","Transform","constructor","maxDelayBetweenBytesMs","array","cursor","lastByteFetchTime","_transform","buffer","encoding","cb","now","Date","length","Array","from","map","byte","push","FullMsgLength","frame","Buffer","slice"],"sources":["C:/Users/tmart/Desktop/Dissertacao/TourOfHeroes/tour-of-heroes-osc.js/tour-of-heroes/node_modules/@serialport/parser-cctalk/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CCTalkParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * Parse the CCTalk protocol\n * @extends Transform\n *\n * A transform stream that emits CCTalk packets as they are received.\n */\nclass CCTalkParser extends stream_1.Transform {\n    constructor(maxDelayBetweenBytesMs = 50) {\n        super();\n        this.array = [];\n        this.cursor = 0;\n        this.lastByteFetchTime = 0;\n        this.maxDelayBetweenBytesMs = maxDelayBetweenBytesMs;\n    }\n    _transform(buffer, encoding, cb) {\n        if (this.maxDelayBetweenBytesMs > 0) {\n            const now = Date.now();\n            if (now - this.lastByteFetchTime > this.maxDelayBetweenBytesMs) {\n                this.array = [];\n                this.cursor = 0;\n            }\n            this.lastByteFetchTime = now;\n        }\n        this.cursor += buffer.length;\n        // TODO: Better Faster es7 no supported by node 4\n        // ES7 allows directly push [...buffer]\n        // this.array = this.array.concat(Array.from(buffer)) //Slower ?!?\n        Array.from(buffer).map(byte => this.array.push(byte));\n        while (this.cursor > 1 && this.cursor >= this.array[1] + 5) {\n            // full frame accumulated\n            // copy command from the array\n            const FullMsgLength = this.array[1] + 5;\n            const frame = Buffer.from(this.array.slice(0, FullMsgLength));\n            // Preserve Extra Data\n            this.array = this.array.slice(frame.length, this.array.length);\n            this.cursor -= FullMsgLength;\n            this.push(frame);\n        }\n        cb();\n    }\n}\nexports.CCTalkParser = CCTalkParser;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,YAAY,SAASC,QAAQ,CAACE,SAAS,CAAC;EAC1CC,WAAWA,CAACC,sBAAsB,GAAG,EAAE,EAAE;IACrC,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACH,sBAAsB,GAAGA,sBAAsB;EACxD;EACAI,UAAUA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,EAAE,EAAE;IAC7B,IAAI,IAAI,CAACP,sBAAsB,GAAG,CAAC,EAAE;MACjC,MAAMQ,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;MACtB,IAAIA,GAAG,GAAG,IAAI,CAACL,iBAAiB,GAAG,IAAI,CAACH,sBAAsB,EAAE;QAC5D,IAAI,CAACC,KAAK,GAAG,EAAE;QACf,IAAI,CAACC,MAAM,GAAG,CAAC;MACnB;MACA,IAAI,CAACC,iBAAiB,GAAGK,GAAG;IAChC;IACA,IAAI,CAACN,MAAM,IAAIG,MAAM,CAACK,MAAM;IAC5B;IACA;IACA;IACAC,KAAK,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,GAAG,CAACC,IAAI,IAAI,IAAI,CAACb,KAAK,CAACc,IAAI,CAACD,IAAI,CAAC,CAAC;IACrD,OAAO,IAAI,CAACZ,MAAM,GAAG,CAAC,IAAI,IAAI,CAACA,MAAM,IAAI,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACxD;MACA;MACA,MAAMe,aAAa,GAAG,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;MACvC,MAAMgB,KAAK,GAAGC,MAAM,CAACN,IAAI,CAAC,IAAI,CAACX,KAAK,CAACkB,KAAK,CAAC,CAAC,EAAEH,aAAa,CAAC,CAAC;MAC7D;MACA,IAAI,CAACf,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkB,KAAK,CAACF,KAAK,CAACP,MAAM,EAAE,IAAI,CAACT,KAAK,CAACS,MAAM,CAAC;MAC9D,IAAI,CAACR,MAAM,IAAIc,aAAa;MAC5B,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC;IACpB;IACAV,EAAE,CAAC,CAAC;EACR;AACJ;AACAd,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}