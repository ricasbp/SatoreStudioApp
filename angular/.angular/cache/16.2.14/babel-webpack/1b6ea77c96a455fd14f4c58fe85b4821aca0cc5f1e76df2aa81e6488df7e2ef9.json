{"ast":null,"code":"import { HEADSETS } from '../mock-vrInfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelement(4, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"span\");\n    i0.ɵɵtext(7, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"span\");\n    i0.ɵɵtext(11, \"IpAddress: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.ipAdress = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\")(14, \"span\");\n    i0.ɵɵtext(15, \"Port: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.port = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\")(18, \"span\");\n    i0.ɵɵtext(19, \"Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"label\", 6);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 7);\n    i0.ɵɵelement(23, \"img\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(headset_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePathQuest3, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.ipAdress);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.port);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(headset_r1.currentStatusEnum);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePath, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class VRInfoComponent {\n  constructor() {\n    this.headsetsList = HEADSETS;\n    this.imagePathQuest3 = 'assets/images/metaquest3.png';\n    this.imagePath = 'assets/images/downloadAsset.png';\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"headsets\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\"], [1, \"image-container-vr\"], [\"alt\", \"MetaQuest3\", 3, \"src\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"\"], [1, \"image-container\"], [\"alt\", \"Click here for VRHeadset to Download Assets\", 3, \"src\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Saved VR List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 24, 7, \"li\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 634:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(101:3) C:\\\\\\\\Users\\\\\\\\tmart\\\\\\\\Desktop\\\\\\\\Dissertacao\\\\\\\\SatoreApp\\\\\\\\angular\\\\\\\\src\\\\\\\\app\\\\\\\\vrinfo\\\\\\\\vrinfo.component.css Unknown word\\\\n\\\\n \\\\u001b[90m  99 | \\\\u001b[39m  height\\\\u001b[33m:\\\\u001b[39m 100%\\\\u001b[33m;\\\\u001b[39m \\\\u001b[90m\\n\\\\u001b[39m\\\\n \\\\u001b[90m 100 | \\\\u001b[39m  display\\\\u001b[33m:\\\\u001b[39m flex\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 101 | \\\\u001b[39m  align\\\\n \\\\u001b[90m     | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 102 | \\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[634]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=vrinfo.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","VRInfoComponent_li_3_Template_input_ngModelChange_8_listener","$event","restoredCtx","ɵɵrestoreView","_r3","headset_r1","$implicit","ɵɵresetView","name","VRInfoComponent_li_3_Template_input_ngModelChange_12_listener","ipAdress","VRInfoComponent_li_3_Template_input_ngModelChange_16_listener","port","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ctx_r0","imagePathQuest3","ɵɵsanitizeUrl","currentStatusEnum","imagePath","VRInfoComponent","constructor","headsetsList","ngOnInit","sendOSC","fetch","_","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../mock-vrInfo';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  imagePathQuest3: string = 'assets/images/metaquest3.png';\n  imagePath: string = 'assets/images/downloadAsset.png';\n\n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>Saved VR List</h1>\n\n<ul class=\"headsets\">\n    <li *ngFor=\"let headset of headsetsList\">\n\n        <span class=\"badge\">{{ headset.name }}</span>\n        \n        <div class=\"image-container-vr\">\n            <img [src]=\"imagePathQuest3\" alt=\"MetaQuest3\">\n        </div>\n        \n        <div>\n            <span>Name: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.name\">\n        </div>\n\n\n        <div>\n            <span>IpAddress: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.ipAdress\">\n        </div>\n\n        <div>\n            <span>Port: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.port\">\n        </div>\n\n        <div>\n            <span>Status: </span>\n            <label for=\"\">{{ headset.currentStatusEnum }}</label>\n        </div>\n\n        <div class=\"image-container\">\n            <img [src]=\"imagePath\" alt=\"Click here for VRHeadset to Download Assets\">\n        </div>\n  \n\n    </li>\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}