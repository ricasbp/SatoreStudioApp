{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SseService {\n  constructor() {\n    this.eventsService = new ReplaySubject(1);\n    this.events$ = this.eventsService.asObservable();\n    const sse = new EventSource(\"http://localhost:3000/events\");\n    //\n    sse.onmessage = e => {\n      this.eventsService.next(JSON.parse(e.data));\n    };\n  }\n  static #_ = this.ɵfac = function SseService_Factory(t) {\n    return new (t || SseService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SseService,\n    factory: SseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReplaySubject","SseService","constructor","eventsService","events$","asObservable","sse","EventSource","onmessage","e","next","JSON","parse","data","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\services\\sse-services\\sse-services.ts"],"sourcesContent":["import {Injectable, OnDestroy, OnInit} from '@angular/core';\r\nimport {fromEvent, Observable, ReplaySubject, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SseService {\r\n\r\n  private eventsService= new ReplaySubject<any>(1);\r\n  events$ = this.eventsService.asObservable();\r\n\r\n  constructor() {\r\n    const sse = new EventSource(\"http://localhost:3000/events\");\r\n    //\r\n    sse.onmessage = e => {\r\n      this.eventsService.next(JSON.parse(e.data));\r\n    }\r\n  }\r\n}"],"mappings":"AACA,SAA+BA,aAAa,QAAgB,MAAM;;AAKlE,OAAM,MAAOC,UAAU;EAKrBC,YAAA;IAHQ,KAAAC,aAAa,GAAE,IAAIH,aAAa,CAAM,CAAC,CAAC;IAChD,KAAAI,OAAO,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,EAAE;IAGzC,MAAMC,GAAG,GAAG,IAAIC,WAAW,CAAC,8BAA8B,CAAC;IAC3D;IACAD,GAAG,CAACE,SAAS,GAAGC,CAAC,IAAG;MAClB,IAAI,CAACN,aAAa,CAACO,IAAI,CAACC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,IAAI,CAAC,CAAC;IAC7C,CAAC;EACH;EAAC,QAAAC,CAAA,G;qBAXUb,UAAU;EAAA;EAAA,QAAAc,EAAA,G;WAAVd,UAAU;IAAAe,OAAA,EAAVf,UAAU,CAAAgB,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}