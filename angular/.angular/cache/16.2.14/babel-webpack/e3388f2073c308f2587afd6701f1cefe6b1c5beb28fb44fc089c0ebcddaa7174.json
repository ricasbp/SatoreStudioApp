{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ToggleExperienceComponent {\n  constructor() {\n    this.imagePathPlay = 'assets/images/play_button.png';\n    this.imagePathStop = 'assets/images/stop_button.png';\n    this.imagePathRestart = 'assets/images/restart_button.png';\n  }\n  sendOSC(action) {\n    console.log(`Action: ${action}`);\n    // You can add more logic based on the action parameter here\n    let url = \"http://localhost:3000/StartExperience\";\n    if (action == 'Stop') {\n      url = \"http://localhost:3000/StopExperience\";\n    }\n    if (action == 'Restart') {\n      url = \"http://localhost:3000/RestartExperience\";\n    }\n    const data = {\n      action: action\n    };\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  static #_ = this.ɵfac = function ToggleExperienceComponent_Factory(t) {\n    return new (t || ToggleExperienceComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToggleExperienceComponent,\n    selectors: [[\"app-toggle-experience\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"toggleButtons\"], [3, \"click\"], [\"alt\", \"Click here to Stop the experience to all executing VRHeadsets.\", 3, \"src\"], [\"alt\", \"Click here to Start the experience to all ready VRHeadsets.\", 3, \"src\"], [\"alt\", \"Click here to Restart the experience to all executing VRHeadsets.\", 3, \"src\"]],\n    template: function ToggleExperienceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\")(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ToggleExperienceComponent_Template_button_click_2_listener() {\n          return ctx.sendOSC(\"Stop\");\n        });\n        i0.ɵɵelement(3, \"img\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"li\")(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ToggleExperienceComponent_Template_button_click_5_listener() {\n          return ctx.sendOSC(\"Play\");\n        });\n        i0.ɵɵelement(6, \"img\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"li\")(8, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ToggleExperienceComponent_Template_button_click_8_listener() {\n          return ctx.sendOSC(\"Restart\");\n        });\n        i0.ɵɵelement(9, \"img\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.imagePathStop, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.imagePathPlay, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.imagePathRestart, i0.ɵɵsanitizeUrl);\n      }\n    },\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 836:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(27:3) C:\\\\\\\\Users\\\\\\\\tmart\\\\\\\\Desktop\\\\\\\\Dissertacao\\\\\\\\SatoreApp\\\\\\\\angular\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\toggle-experience\\\\\\\\toggle-experience.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 25 | \\\\u001b[39m  padding-left\\\\u001b[33m:\\\\u001b[39m 15%\\\\u001b[33m;\\\\u001b[39m ~\\\\n \\\\u001b[90m 26 | \\\\u001b[39m  \\\\u001b[90m\\n\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 27 | \\\\u001b[39m  display\\\\u001b[33m:\\\\u001b[39m block\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 28 | \\\\u001b[39m  margin\\\\u001b[33m:\\\\u001b[39m auto\\\\u001b[33m;\\\\u001b[39m  \\\\n \\\\u001b[90m 29 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[836]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=toggle-experience.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["ToggleExperienceComponent","constructor","imagePathPlay","imagePathStop","imagePathRestart","sendOSC","action","console","log","url","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","_","_2","selectors","decls","vars","consts","template","ToggleExperienceComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","ToggleExperienceComponent_Template_button_click_2_listener","ɵɵelement","ɵɵelementEnd","ToggleExperienceComponent_Template_button_click_5_listener","ToggleExperienceComponent_Template_button_click_8_listener","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\toggle-experience\\toggle-experience.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\toggle-experience\\toggle-experience.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-experience',\n  templateUrl: './toggle-experience.component.html',\n  styleUrls: ['./toggle-experience.component.css']\n})\nexport class ToggleExperienceComponent {\n\n  imagePathPlay: string = 'assets/images/play_button.png';\n  imagePathStop: string = 'assets/images/stop_button.png';\n  imagePathRestart: string = 'assets/images/restart_button.png';\n\n  sendOSC(action: string) {\n    console.log(`Action: ${action}`);\n    // You can add more logic based on the action parameter here\n\n    let url = \"http://localhost:3000/StartExperience\";\n\n    if(action == 'Stop'){\n      url = \"http://localhost:3000/StopExperience\";\n    }\n    if(action == 'Restart'){\n      url = \"http://localhost:3000/RestartExperience\";\n    }\n    \n    const data = { action: action };\n\n    fetch(url, {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Success:', data);\n    })\n    .catch((error) => {\n        console.error('Error:', error);\n    });\n}\n\n}\n","<ul class=\"toggleButtons\">\n        <li>\n            <button (click)=\"sendOSC('Stop')\">\n                <img [src]=\"imagePathStop\" alt=\"Click here to Stop the experience to all executing VRHeadsets.\">\n            </button>\n        </li>\n        <li>\n            <button (click)=\"sendOSC('Play')\">\n                <img [src]=\"imagePathPlay\" alt=\"Click here to Start the experience to all ready VRHeadsets.\">\n            </button>\n        </li>\n        <li>\n            <button (click)=\"sendOSC('Restart')\">\n                <img [src]=\"imagePathRestart\" alt=\"Click here to Restart the experience to all executing VRHeadsets.\">\n            </button>\n        </li>\n</ul>"],"mappings":";AAOA,OAAM,MAAOA,yBAAyB;EALtCC,YAAA;IAOE,KAAAC,aAAa,GAAW,+BAA+B;IACvD,KAAAC,aAAa,GAAW,+BAA+B;IACvD,KAAAC,gBAAgB,GAAW,kCAAkC;;EAE7DC,OAAOA,CAACC,MAAc;IACpBC,OAAO,CAACC,GAAG,CAAC,WAAWF,MAAM,EAAE,CAAC;IAChC;IAEA,IAAIG,GAAG,GAAG,uCAAuC;IAEjD,IAAGH,MAAM,IAAI,MAAM,EAAC;MAClBG,GAAG,GAAG,sCAAsC;;IAE9C,IAAGH,MAAM,IAAI,SAAS,EAAC;MACrBG,GAAG,GAAG,yCAAyC;;IAGjD,MAAMC,IAAI,GAAG;MAAEJ,MAAM,EAAEA;IAAM,CAAE;IAE/BK,KAAK,CAACF,GAAG,EAAE;MACPG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;OACnB;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;KAC5B,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACP,IAAI,IAAG;MACTH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,IAAI,CAAC;IACjC,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAI;MACbd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAnCYtB,yBAAyB;EAAA;EAAA,QAAAuB,EAAA,G;UAAzBvB,yBAAyB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPtCE,EAAA,CAAAC,cAAA,YAA0B;QAEND,EAAA,CAAAE,UAAA,mBAAAC,2DAAA;UAAA,OAASJ,GAAA,CAAA1B,OAAA,CAAQ,MAAM,CAAC;QAAA,EAAC;QAC7B2B,EAAA,CAAAI,SAAA,aAAgG;QACpGJ,EAAA,CAAAK,YAAA,EAAS;QAEbL,EAAA,CAAAC,cAAA,SAAI;QACQD,EAAA,CAAAE,UAAA,mBAAAI,2DAAA;UAAA,OAASP,GAAA,CAAA1B,OAAA,CAAQ,MAAM,CAAC;QAAA,EAAC;QAC7B2B,EAAA,CAAAI,SAAA,aAA6F;QACjGJ,EAAA,CAAAK,YAAA,EAAS;QAEbL,EAAA,CAAAC,cAAA,SAAI;QACQD,EAAA,CAAAE,UAAA,mBAAAK,2DAAA;UAAA,OAASR,GAAA,CAAA1B,OAAA,CAAQ,SAAS,CAAC;QAAA,EAAC;QAChC2B,EAAA,CAAAI,SAAA,aAAsG;QAC1GJ,EAAA,CAAAK,YAAA,EAAS;;;QAXAL,EAAA,CAAAQ,SAAA,GAAqB;QAArBR,EAAA,CAAAS,UAAA,QAAAV,GAAA,CAAA5B,aAAA,EAAA6B,EAAA,CAAAU,aAAA,CAAqB;QAKrBV,EAAA,CAAAQ,SAAA,GAAqB;QAArBR,EAAA,CAAAS,UAAA,QAAAV,GAAA,CAAA7B,aAAA,EAAA8B,EAAA,CAAAU,aAAA,CAAqB;QAKrBV,EAAA,CAAAQ,SAAA,GAAwB;QAAxBR,EAAA,CAAAS,UAAA,QAAAV,GAAA,CAAA3B,gBAAA,EAAA4B,EAAA,CAAAU,aAAA,CAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}