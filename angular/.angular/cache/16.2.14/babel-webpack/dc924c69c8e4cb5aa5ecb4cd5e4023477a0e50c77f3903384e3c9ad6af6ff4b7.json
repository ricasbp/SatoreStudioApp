{"ast":null,"code":"import { HEADSETS } from '../mock-vrInfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"span\");\n    i0.ɵɵtext(5, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\")(8, \"span\");\n    i0.ɵɵtext(9, \"IpAddress: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.ipAdress = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"span\");\n    i0.ɵɵtext(13, \"Port: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_14_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.port = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\")(16, \"span\");\n    i0.ɵɵtext(17, \"Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(headset_r1.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.ipAdress);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.port);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(headset_r1.currentStatusEnum);\n  }\n}\nexport class VRInfoComponent {\n  constructor() {\n    this.headsetsList = HEADSETS;\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"headsets\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"VR list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 20, 5, \"li\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\\n\\n.headsets[_ngcontent-%COMP%] {\\n    margin: 0 0 2em 0;\\n    list-style-type: none;\\n    padding: 0;\\n    \\n\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    display: flex;\\n    background-color: #8f8f8f;\\n\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    flex: 1;\\n    cursor: pointer;\\n    position: relative;\\n    left: 0;\\n    background-color: #8f8f8f;\\n    margin: .5em;\\n    padding: 0;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: stretch;\\n    height: 1.8em;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    color: #2c3a41;\\n    background-color: #e6e6e6;\\n    left: .1em;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n    background-color: #525252;\\n    color: #fafafa;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%] {\\n    background-color: black;\\n    color: white;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:hover {\\n    background-color: #505050;\\n    color: white;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:active {\\n    background-color: black;\\n    color: white;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    padding: 0.8em 0.7em 0 0.7em;\\n    background-color: #405061;\\n    line-height: 1em;\\n    margin-right: .8em;\\n    border-radius: 4px 0 0 4px;\\n  }\\n  \\n  .headsets[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%] {\\n    align-self: center;\\n  }\\n\\n  .headsets[_ngcontent-%COMP%]   .online-status[_ngcontent-%COMP%] {\\n    color: green;\\n    }\\n\\n    .offline-status[_ngcontent-%COMP%] {\\n    color: red;\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdnJpbmZvL3ZyaW5mby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUN6QztJQUNJLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsVUFBVTtJQUNWLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGFBQWE7SUFDYix5QkFBeUI7O0VBRTNCOztFQUVBO0lBQ0UsT0FBTztJQUNQLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsT0FBTztJQUNQLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGNBQWM7SUFDZCx5QkFBeUI7SUFDekIsVUFBVTtFQUNaOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSx1QkFBdUI7SUFDdkIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHVCQUF1QjtJQUN2QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWiw0QkFBNEI7SUFDNUIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsMEJBQTBCO0VBQzVCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsWUFBWTtJQUNaOztJQUVBO0lBQ0EsVUFBVTtJQUNWIiwic291cmNlc0NvbnRlbnQiOlsiLyogSGVyb2VzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcbi5oZWFkc2V0cyB7XHJcbiAgICBtYXJnaW46IDAgMCAyZW0gMDtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICAvKiB3aWR0aDogMTVlbTsqL1xyXG4gIH1cclxuICBcclxuICAuaGVhZHNldHMgbGkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZjhmOGY7XHJcblxyXG4gIH1cclxuICBcclxuICAuaGVhZHNldHMgYnV0dG9uIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzhmOGY4ZjtcclxuICAgIG1hcmdpbjogLjVlbTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgICBoZWlnaHQ6IDEuOGVtO1xyXG4gIH1cclxuICBcclxuICAuaGVhZHNldHMgYnV0dG9uOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjMmMzYTQxO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcclxuICAgIGxlZnQ6IC4xZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkc2V0cyBidXR0b246YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7XHJcbiAgICBjb2xvcjogI2ZhZmFmYTtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTA1MDUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuaGVhZHNldHMgYnV0dG9uLnNlbGVjdGVkOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRzZXRzIC5iYWRnZSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6IHNtYWxsO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMC44ZW0gMC43ZW0gMCAwLjdlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MDUwNjE7XHJcbiAgICBsaW5lLWhlaWdodDogMWVtO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuOGVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkc2V0cyAubmFtZSB7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuaGVhZHNldHMgLm9ubGluZS1zdGF0dXMge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgfVxyXG5cclxuICAgIC5vZmZsaW5lLXN0YXR1cyB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VRInfoComponent_li_3_Template_input_ngModelChange_6_listener","$event","restoredCtx","ɵɵrestoreView","_r3","headset_r1","$implicit","ɵɵresetView","name","VRInfoComponent_li_3_Template_input_ngModelChange_10_listener","ipAdress","VRInfoComponent_li_3_Template_input_ngModelChange_14_listener","port","ɵɵadvance","ɵɵtextInterpolate","id","ɵɵproperty","currentStatusEnum","VRInfoComponent","constructor","headsetsList","ngOnInit","sendOSC","fetch","_","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../mock-vrInfo';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>VR list</h1>\n\n<ul class=\"headsets\">\n    <li *ngFor=\"let headset of headsetsList\">\n\n        <span class=\"badge\">{{ headset.id }}</span>\n        <div>\n            <span>Name: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.name\">\n        </div>\n\n        <div>\n            <span>IpAddress: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.ipAdress\">\n        </div>\n\n        <div>\n            <span>Port: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.port\">\n        </div>\n\n        <div>\n            <span>Status: </span>\n            <span>{{ headset.currentStatusEnum }}</span>\n        </div>\n    </li>\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}