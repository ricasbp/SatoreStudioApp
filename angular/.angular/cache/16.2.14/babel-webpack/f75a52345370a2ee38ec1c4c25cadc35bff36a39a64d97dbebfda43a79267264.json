{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/tmart/Desktop/Dissertacao/TourOfHeroes/tour-of-heroes-osc.js/tour-of-heroes/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unixWrite = void 0;\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst util_1 = require(\"util\");\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/unixWrite');\nconst writeAsync = (0, util_1.promisify)(fs_1.write);\nconst writable = binding => {\n  return new Promise((resolve, reject) => {\n    binding.poller.once('writable', err => err ? reject(err) : resolve());\n  });\n};\nconst unixWrite = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* ({\n    binding,\n    buffer,\n    offset = 0,\n    fsWriteAsync = writeAsync\n  }) {\n    const bytesToWrite = buffer.length - offset;\n    logger('Starting write', buffer.length, 'bytes offset', offset, 'bytesToWrite', bytesToWrite);\n    if (!binding.isOpen || !binding.fd) {\n      throw new Error('Port is not open');\n    }\n    try {\n      const {\n        bytesWritten\n      } = yield fsWriteAsync(binding.fd, buffer, offset, bytesToWrite);\n      logger('write returned: wrote', bytesWritten, 'bytes');\n      if (bytesWritten + offset < buffer.length) {\n        if (!binding.isOpen) {\n          throw new Error('Port is not open');\n        }\n        return (0, exports.unixWrite)({\n          binding,\n          buffer,\n          offset: bytesWritten + offset,\n          fsWriteAsync\n        });\n      }\n      logger('Finished writing', bytesWritten + offset, 'bytes');\n    } catch (err) {\n      logger('write errored', err);\n      if (err.code === 'EAGAIN' || err.code === 'EWOULDBLOCK' || err.code === 'EINTR') {\n        if (!binding.isOpen) {\n          throw new Error('Port is not open');\n        }\n        logger('waiting for writable because of code:', err.code);\n        yield writable(binding);\n        return (0, exports.unixWrite)({\n          binding,\n          buffer,\n          offset,\n          fsWriteAsync\n        });\n      }\n      const disconnectError = err.code === 'EBADF' ||\n      // Bad file number means we got closed\n      err.code === 'ENXIO' ||\n      // No such device or address probably usb disconnect\n      err.code === 'UNKNOWN' || err.errno === -1; // generic error\n      if (disconnectError) {\n        err.disconnect = true;\n        logger('disconnecting', err);\n      }\n      logger('error', err);\n      throw err;\n    }\n  });\n  return function unixWrite(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.unixWrite = unixWrite;","map":{"version":3,"names":["_asyncToGenerator","require","default","__importDefault","mod","__esModule","Object","defineProperty","exports","value","unixWrite","fs_1","debug_1","util_1","logger","writeAsync","promisify","write","writable","binding","Promise","resolve","reject","poller","once","err","_ref","buffer","offset","fsWriteAsync","bytesToWrite","length","isOpen","fd","Error","bytesWritten","code","disconnectError","errno","disconnect","_x","apply","arguments"],"sources":["C:/Users/tmart/Desktop/Dissertacao/TourOfHeroes/tour-of-heroes-osc.js/tour-of-heroes/node_modules/@serialport/bindings-cpp/dist/unix-write.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unixWrite = void 0;\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst util_1 = require(\"util\");\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/unixWrite');\nconst writeAsync = (0, util_1.promisify)(fs_1.write);\nconst writable = (binding) => {\n    return new Promise((resolve, reject) => {\n        binding.poller.once('writable', err => (err ? reject(err) : resolve()));\n    });\n};\nconst unixWrite = async ({ binding, buffer, offset = 0, fsWriteAsync = writeAsync }) => {\n    const bytesToWrite = buffer.length - offset;\n    logger('Starting write', buffer.length, 'bytes offset', offset, 'bytesToWrite', bytesToWrite);\n    if (!binding.isOpen || !binding.fd) {\n        throw new Error('Port is not open');\n    }\n    try {\n        const { bytesWritten } = await fsWriteAsync(binding.fd, buffer, offset, bytesToWrite);\n        logger('write returned: wrote', bytesWritten, 'bytes');\n        if (bytesWritten + offset < buffer.length) {\n            if (!binding.isOpen) {\n                throw new Error('Port is not open');\n            }\n            return (0, exports.unixWrite)({ binding, buffer, offset: bytesWritten + offset, fsWriteAsync });\n        }\n        logger('Finished writing', bytesWritten + offset, 'bytes');\n    }\n    catch (err) {\n        logger('write errored', err);\n        if (err.code === 'EAGAIN' || err.code === 'EWOULDBLOCK' || err.code === 'EINTR') {\n            if (!binding.isOpen) {\n                throw new Error('Port is not open');\n            }\n            logger('waiting for writable because of code:', err.code);\n            await writable(binding);\n            return (0, exports.unixWrite)({ binding, buffer, offset, fsWriteAsync });\n        }\n        const disconnectError = err.code === 'EBADF' || // Bad file number means we got closed\n            err.code === 'ENXIO' || // No such device or address probably usb disconnect\n            err.code === 'UNKNOWN' ||\n            err.errno === -1; // generic error\n        if (disconnectError) {\n            err.disconnect = true;\n            logger('disconnecting', err);\n        }\n        logger('error', err);\n        throw err;\n    }\n};\nexports.unixWrite = unixWrite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}