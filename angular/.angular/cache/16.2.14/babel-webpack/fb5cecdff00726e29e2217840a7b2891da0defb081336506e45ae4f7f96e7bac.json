{"ast":null,"code":"import { HEADSETS } from '../mock-vrInfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction VRInfoComponent_li_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.vrinfo1.id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.vrinfo1.name, \" \");\n  }\n}\nexport class VRInfoComponent {\n  constructor() {\n    this.headsetsList = HEADSETS;\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 25,\n    vars: 7,\n    consts: [[\"for\", \"\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"Headsets\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.vrinfo1.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"label\", 0);\n        i0.ɵɵtext(8, \"IpAdress: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.vrinfo1.ipAdress = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"label\", 0);\n        i0.ɵɵtext(12, \"Port: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.vrinfo1.port = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"label\", 0);\n        i0.ɵɵtext(16, \"Status: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.vrinfo1.currentStatusEnum = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function VRInfoComponent_Template_button_click_19_listener() {\n          return ctx.sendOSC();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"h1\");\n        i0.ɵɵtext(22, \"VR list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ul\", 3);\n        i0.ɵɵtemplate(24, VRInfoComponent_li_24_Template, 4, 2, \"li\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.vrinfo1.name, \" Headset added\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.vrinfo1.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.vrinfo1.ipAdress);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.vrinfo1.port);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.vrinfo1.currentStatusEnum);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Click me for OSC Message to \", ctx.vrinfo1.name, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Headsets);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","vrinfo1","id","name","VRInfoComponent","constructor","headsetsList","ngOnInit","sendOSC","fetch","_","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵlistener","VRInfoComponent_Template_input_ngModelChange_5_listener","$event","ɵɵelement","VRInfoComponent_Template_input_ngModelChange_9_listener","ipAdress","VRInfoComponent_Template_input_ngModelChange_13_listener","port","VRInfoComponent_Template_input_ngModelChange_17_listener","currentStatusEnum","VRInfoComponent_Template_button_click_19_listener","ɵɵtemplate","VRInfoComponent_li_24_Template","ɵɵproperty","Headsets"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../mock-vrInfo';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> <!--Two way data-binding-->\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n\n<h1>VR list</h1>\n\n<ul class= \"Headsets\">\n    <li *ngFor =\"let headset of Headsets\">\n        <span class = \"badge\"> {{vrinfo1.id}} </span> {{vrinfo1.name}}\n    </li>\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}