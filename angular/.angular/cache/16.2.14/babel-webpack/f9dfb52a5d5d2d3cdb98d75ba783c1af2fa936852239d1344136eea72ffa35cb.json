{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// import { Client, Message } from 'node-osc';\n// var osc = require(\"osc\");\n'use strict';\nexport class HeroesComponent {\n  ngOnInit() {}\n  sendOSC() {\n    const plugin = new DatagramPlugin({\n      send: {\n        host: 'custom_ip_address',\n        port: 12345 // Replace with the port number you want to send OSC messages to\n      }\n    });\n    // Bind the UDP socket\n    plugin.open();\n    // Create an OSC message (assuming you have an OSC library or code to create OSC messages)\n    const oscMessage = createOSCMessage(); // Replace this with your actual OSC message creation logic\n    // Convert the OSC message to a binary representation (assuming you have a function to do this)\n    const oscBinary = convertOSCMessageToBinary(oscMessage); // Replace this with your actual conversion logic\n    // Send the OSC message\n    plugin.send(oscBinary);\n  }\n  static #_ = this.ɵfac = function HeroesComponent_Factory(t) {\n    return new (t || HeroesComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeroesComponent,\n    selectors: [[\"app-heroes\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function HeroesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"heroes works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function HeroesComponent_Template_button_click_2_listener() {\n          return ctx.sendOSC();\n        });\n        i0.ɵɵtext(3, \" Click me for OSC Message\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HeroesComponent","ngOnInit","sendOSC","plugin","DatagramPlugin","send","host","port","open","oscMessage","createOSCMessage","oscBinary","convertOSCMessageToBinary","_","_2","selectors","decls","vars","consts","template","HeroesComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HeroesComponent_Template_button_click_2_listener"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\TourOfHeroes\\tour-of-heroes-osc.js\\tour-of-heroes\\src\\app\\heroes\\heroes.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\TourOfHeroes\\tour-of-heroes-osc.js\\tour-of-heroes\\src\\app\\heroes\\heroes.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\n import OSC from 'osc-js';\n// import { Client, Message } from 'node-osc';\n// var osc = require(\"osc\");\n\n'use strict';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n\n  ngOnInit() {\n    \n  }\n\n  sendOSC(){\n    const plugin = new DatagramPlugin({\n      send: {\n          host: 'custom_ip_address', // Replace with your custom IP address\n          port: 12345 // Replace with the port number you want to send OSC messages to\n      }\n  });\n  \n  // Bind the UDP socket\n  plugin.open();\n  \n  // Create an OSC message (assuming you have an OSC library or code to create OSC messages)\n  const oscMessage = createOSCMessage(); // Replace this with your actual OSC message creation logic\n  \n  // Convert the OSC message to a binary representation (assuming you have a function to do this)\n  const oscBinary = convertOSCMessageToBinary(oscMessage); // Replace this with your actual conversion logic\n  \n  // Send the OSC message\n  plugin.send(oscBinary);\n  }\n}","<h1>heroes works!</h1>\r\n\r\n<button (click)=\"sendOSC()\"> Click me for OSC Message</button>\r\n"],"mappings":";AAEA;AACA;AAEA,YAAY;AAOZ,OAAM,MAAOA,eAAe;EAE1BC,QAAQA,CAAA,GAER;EAEAC,OAAOA,CAAA;IACL,MAAMC,MAAM,GAAG,IAAIC,cAAc,CAAC;MAChCC,IAAI,EAAE;QACFC,IAAI,EAAE,mBAAmB;QACzBC,IAAI,EAAE,KAAK,CAAC;;KAEnB,CAAC;IAEF;IACAJ,MAAM,CAACK,IAAI,EAAE;IAEb;IACA,MAAMC,UAAU,GAAGC,gBAAgB,EAAE,CAAC,CAAC;IAEvC;IACA,MAAMC,SAAS,GAAGC,yBAAyB,CAACH,UAAU,CAAC,CAAC,CAAC;IAEzD;IACAN,MAAM,CAACE,IAAI,CAACM,SAAS,CAAC;EACtB;EAAC,QAAAE,CAAA,G;qBAzBUb,eAAe;EAAA;EAAA,QAAAc,EAAA,G;UAAfd,eAAe;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ5BE,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEtBH,EAAA,CAAAC,cAAA,gBAA4B;QAApBD,EAAA,CAAAI,UAAA,mBAAAC,iDAAA;UAAA,OAASN,GAAA,CAAApB,OAAA,EAAS;QAAA,EAAC;QAAEqB,EAAA,CAAAE,MAAA,gCAAwB;QAAAF,EAAA,CAAAG,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}