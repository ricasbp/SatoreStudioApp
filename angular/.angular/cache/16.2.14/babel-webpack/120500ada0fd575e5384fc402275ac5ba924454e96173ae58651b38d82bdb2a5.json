{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HEADSETS } from '../../mock-vrInfo';\nimport { tap } from 'rxjs';\nlet VRInfoComponent = class VRInfoComponent {\n  constructor(sseService, cdRef) {\n    this.sseService = sseService;\n    this.cdRef = cdRef;\n    this.headsetsList = HEADSETS;\n    this.imagePathQuest3 = 'assets/images/metaquest3.png';\n    this.imagePathQuest3Grey = 'assets/images/metaquest3_grey.png';\n    this.imagePathDownload = 'assets/images/download_button.png';\n    this.imagePathPlay = 'assets/images/play_button.png';\n    this.imagePathStopGrey = 'assets/images/stop_button_grey.png';\n    this.imagePathRestartGrey = 'assets/images/restart_button_grey.png';\n    //Refresh the DOM if receives value from event\n    this.data$ = this.sseService.events$.pipe(tap(value => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }));\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n};\n\nVRInfoComponent = __decorate([Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})], VRInfoComponent);\nexport { VRInfoComponent };","map":{"version":3,"names":["Component","HEADSETS","tap","VRInfoComponent","constructor","sseService","cdRef","headsetsList","imagePathQuest3","imagePathQuest3Grey","imagePathDownload","imagePathPlay","imagePathStopGrey","imagePathRestartGrey","data$","events$","pipe","value","console","log","detectChanges","ngOnInit","sendOSC","fetch","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vr-info\\vr-info.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../../mock-vrInfo';\nimport { SseService } from 'src/app/services/sse-services/sse-services';\nimport { tap } from 'rxjs';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  imagePathQuest3: string = 'assets/images/metaquest3.png';\n  imagePathQuest3Grey: string = 'assets/images/metaquest3_grey.png';\n  imagePathDownload: string = 'assets/images/download_button.png';\n  imagePathPlay: string = 'assets/images/play_button.png';\n  imagePathStopGrey: string = 'assets/images/stop_button_grey.png';\n  imagePathRestartGrey: string = 'assets/images/restart_button_grey.png';\n\n  //Refresh the DOM if receives value from event\n  data$ = this.sseService.events$.pipe(\n    tap((value) => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }))\n\n  constructor(protected readonly sseService: SseService, private cdRef: ChangeDetectorRef) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\")\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n"],"mappings":";AAAA,SAA4BA,SAAS,QAAmC,eAAe;AAEvF,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,GAAG,QAAQ,MAAM;AAOnB,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAkB1BC,YAA+BC,UAAsB,EAAUC,KAAwB;IAAxD,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAhBpE,KAAAC,YAAY,GAAGN,QAAQ;IAEvB,KAAAO,eAAe,GAAW,8BAA8B;IACxD,KAAAC,mBAAmB,GAAW,mCAAmC;IACjE,KAAAC,iBAAiB,GAAW,mCAAmC;IAC/D,KAAAC,aAAa,GAAW,+BAA+B;IACvD,KAAAC,iBAAiB,GAAW,oCAAoC;IAChE,KAAAC,oBAAoB,GAAW,uCAAuC;IAEtE;IACA,KAAAC,KAAK,GAAG,IAAI,CAACT,UAAU,CAACU,OAAO,CAACC,IAAI,CAClCd,GAAG,CAAEe,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAI,CAACX,KAAK,CAACc,aAAa,EAAE;IAC5B,CAAC,CAAC,CAAC;EAGL;EAEAC,QAAQA,CAAA,GACR;EAEAC,OAAOA,CAAA;IACLC,KAAK,CAAC,kCAAkC,CAAC;IACzC;EACF;CAED;;AA7BYpB,eAAe,GAAAqB,UAAA,EAL3BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWxB,eAAe,CA6B3B;SA7BYA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}