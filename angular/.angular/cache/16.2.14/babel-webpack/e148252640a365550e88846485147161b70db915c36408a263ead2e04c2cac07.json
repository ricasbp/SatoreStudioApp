{"ast":null,"code":"import { HEADSETS } from '../../mock-vrInfo';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/sse-services/sse-services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"isOnline\": a0\n  };\n};\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4)(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"span\", 7);\n    i0.ɵɵtext(5, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\")(8, \"span\");\n    i0.ɵɵtext(9, \"IpAddress: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.port = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"span\");\n    i0.ɵɵtext(13, \"Port: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_14_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.port = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\")(16, \"span\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 9)(19, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function VRInfoComponent_li_3_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.sendOSC());\n    });\n    i0.ɵɵelement(20, \"img\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, headset_r1.isOnline));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", headset_r1.isOnline ? ctx_r0.imagePathQuest3 : ctx_r0.imagePathQuest3Grey, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.port);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.port);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status: \", headset_r1.isOnline, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePathDownload, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class VRInfoComponent {\n  constructor(sseService, cdRef) {\n    this.sseService = sseService;\n    this.cdRef = cdRef;\n    this.headsetsList = HEADSETS;\n    this.imagePathQuest3 = 'assets/images/metaquest3.png';\n    this.imagePathQuest3Grey = 'assets/images/metaquest3_grey.png';\n    this.imagePathDownload = 'assets/images/download_button.png';\n    this.imagePathPlay = 'assets/images/play_button.png';\n    this.imagePathStopGrey = 'assets/images/stop_button_grey.png';\n    this.imagePathRestartGrey = 'assets/images/restart_button_grey.png';\n    //Refresh the DOM if receives value from event\n    this.data$ = this.sseService.events$.pipe(tap(value => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }));\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)(i0.ɵɵdirectiveInject(i1.SseService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 10,\n    vars: 7,\n    consts: [[1, \"headsets\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"image-container-button\"], [\"alt\", \"Click here to Start Experience\", 3, \"src\"], [3, \"ngClass\"], [1, \"image-container-vr\"], [\"alt\", \"MetaQuest3\", 3, \"src\"], [1, \"name\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"image-container\"], [3, \"click\"], [\"alt\", \"Click here to download VRHeadset assets\", 3, \"src\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Saved VR List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 21, 9, \"li\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\");\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"json\");\n        i0.ɵɵpipe(9, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"src\", ctx.imagePathPlay, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(8, 3, i0.ɵɵpipeBind1(9, 5, ctx.data$)), \" \");\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.AsyncPipe, i2.JsonPipe],\n    styles: [\"\\n\\n\\n\\n.headsets[_ngcontent-%COMP%] {\\n  margin: 2%;\\n  list-style-type: none;\\n  padding: 0;\\n  max-width: 100%; \\n\\n  width: 90%; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  flex: 1;\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #8f8f8f;\\n  margin: .5em;\\n  padding: 0;\\n  border-radius: 45px; \\n\\n  display: flex;\\n  align-items: center; \\n\\n  height: 2.5em;\\n  border: none; \\n\\n  transition: background-color 0.3s, left 0.3s; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] { \\n\\n  color: #868686;\\n  background-color: #ffffff;\\n\\n  display: flex;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   .isOnline[_ngcontent-%COMP%] {\\n  color: #000000;\\n  font-weight: bold; \\n\\n  display: flex;\\n  background-color: #ffffff;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  color: #2c3a41;\\n  background-color: #e6e6e6;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n  background-color: #525252;\\n  color: #fafafa;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%] {\\n  background-color: black;\\n  color: rgb(255, 0, 0);\\n  \\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:hover {\\n  background-color: #505050;\\n  color: white;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:active {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%] {\\n  align-self: center;\\n  flex-grow: 1; \\n\\n  padding-left: 0.5em; \\n\\n}\\n\\n\\n\\n.image-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.5em;\\n}\\n\\n.image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  border-radius: 75px;\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n\\n.image-container-vr[_ngcontent-%COMP%] {\\n  top: 0; \\n\\n  left: 0; \\n\\n  width: 8%; \\n\\n  height: 8%; \\n\\n  display: flex;\\n  padding: 1em;\\n}\\n\\n.image-container-vr[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n\\n.image-container-button[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 255, 255);\\n  top: 0; \\n\\n  left: 0; \\n\\n  width: 8%; \\n\\n  height: 8%; \\n\\n  display: flex;\\n  padding: 1em;\\n  border: 1px solid #ffffff;\\n  border-radius: 30px; \\n\\n}\\n\\n.image-container-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy92cmluZm8vdnJpbmZvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUNBQXlDOzs7QUFHekM7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixlQUFlLEVBQUUsMENBQTBDO0VBQzNELFVBQVUsRUFBRSxzQ0FBc0M7QUFDcEQ7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixVQUFVO0VBQ1YsbUJBQW1CLEVBQUUsc0NBQXNDO0VBQzNELGFBQWE7RUFDYixtQkFBbUIsRUFBRSwrQkFBK0I7RUFDcEQsYUFBYTtFQUNiLFlBQVksRUFBRSxrQ0FBa0M7RUFDaEQsNENBQTRDLEVBQUUsd0NBQXdDO0FBQ3hGOztBQUVBLGVBQWUsK0JBQStCO0VBQzVDLGNBQWM7RUFDZCx5QkFBeUI7O0VBRXpCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZ0JBQWdCLEVBQUUsbURBQW1EO0VBQ3JFLGtCQUFrQixFQUFFLGtDQUFrQztFQUN0RCxrQkFBa0IsRUFBRSxxREFBcUQ7QUFDM0U7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCLEVBQUUseUJBQXlCO0VBQzVDLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFFLG1EQUFtRDtFQUNyRSxrQkFBa0IsRUFBRSxrQ0FBa0M7RUFDdEQsa0JBQWtCLEVBQUUscURBQXFEO0FBQzNFOztBQUVBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHFCQUFxQjs7QUFFdkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZLEVBQUUsNENBQTRDO0VBQzFELG1CQUFtQixFQUFFLDhDQUE4QztBQUNyRTs7QUFFQSxzQkFBc0I7QUFDdEI7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUUsZ0RBQWdEO0FBQ3ZFOztBQUVBO0VBQ0UsTUFBTSxFQUFFLHNDQUFzQztFQUM5QyxPQUFPLEVBQUUsdUNBQXVDO0VBQ2hELFNBQVMsRUFBRSx3Q0FBd0M7RUFDbkQsVUFBVSxFQUFFLHdDQUF3QztFQUNwRCxhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBRSxnREFBZ0Q7QUFDdkU7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsTUFBTSxFQUFFLHNDQUFzQztFQUM5QyxPQUFPLEVBQUUsdUNBQXVDO0VBQ2hELFNBQVMsRUFBRSx3Q0FBd0M7RUFDbkQsVUFBVSxFQUFFLHdDQUF3QztFQUNwRCxhQUFhO0VBQ2IsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixtQkFBbUIsRUFBRSxnQkFBZ0I7QUFDdkM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFFLGdEQUFnRDtBQUN2RSIsInNvdXJjZXNDb250ZW50IjpbIi8qIEhlcm9lc0NvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xyXG5cclxuXHJcbi5oZWFkc2V0cyB7XHJcbiAgbWFyZ2luOiAyJTtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIEVuc3VyZSB0aGUgY29udGFpbmVyIGRvZXNuJ3Qgb3ZlcmZsb3cgKi9cclxuICB3aWR0aDogOTAlOyAvKiBBZGp1c3RlZCB3aWR0aCBmb3IgcmVzcG9uc2l2ZW5lc3MgKi9cclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbiB7XHJcbiAgZmxleDogMTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzhmOGY4ZjtcclxuICBtYXJnaW46IC41ZW07XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXItcmFkaXVzOiA0NXB4OyAvKiBSb3VuZHMgdGhlIGNvcm5lcnMgb2YgdGhlIGJ1dHRvbnMgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlcnMgY29udGVudCB2ZXJ0aWNhbGx5ICovXHJcbiAgaGVpZ2h0OiAyLjVlbTtcclxuICBib3JkZXI6IG5vbmU7IC8qIFJlbW92ZXMgZGVmYXVsdCBidXR0b24gYm9yZGVyICovXHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBsZWZ0IDAuM3M7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciBob3ZlciBlZmZlY3RzICovXHJcbn1cclxuXHJcbi5oZWFkc2V0cyBsaSB7IC8qU3RhbmRhcmQ6IEhlYWRzZXQgaXMgb2ZmbGluZSovXHJcbiAgY29sb3I6ICM4Njg2ODY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47IC8qIEVuc3VyZXMgcm91bmRlZCBjb3JuZXJzIGNvbnRhaW4gY2hpbGQgZWxlbWVudHMgKi9cclxuICBtYXJnaW4tYm90dG9tOiAxZW07IC8qIEFkZHMgc3BhY2UgYmV0d2VlbiBsaXN0IGl0ZW1zICovXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlOyAvKiBFbnN1cmUgcG9zaXRpb25pbmcgY29udGV4dCBmb3IgYWJzb2x1dGUgY2hpbGRyZW4gKi9cclxufVxyXG5cclxuLmhlYWRzZXRzIC5pc09ubGluZSB7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIG9yIGZvbnQtd2VpZ2h0OiA3MDA7ICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogRW5zdXJlcyByb3VuZGVkIGNvcm5lcnMgY29udGFpbiBjaGlsZCBlbGVtZW50cyAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTsgLyogQWRkcyBzcGFjZSBiZXR3ZWVuIGxpc3QgaXRlbXMgKi9cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7IC8qIEVuc3VyZSBwb3NpdGlvbmluZyBjb250ZXh0IGZvciBhYnNvbHV0ZSBjaGlsZHJlbiAqL1xyXG59XHJcblxyXG4uaGVhZHNldHMgYnV0dG9uOmhvdmVyIHtcclxuICBjb2xvcjogIzJjM2E0MTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xyXG59XHJcblxyXG4uaGVhZHNldHMgYnV0dG9uOmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjtcclxuICBjb2xvcjogI2ZhZmFmYTtcclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgY29sb3I6IHJnYigyNTUsIDAsIDApO1xyXG4gIFxyXG59XHJcblxyXG4uaGVhZHNldHMgYnV0dG9uLnNlbGVjdGVkOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTA1MDUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZDphY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmhlYWRzZXRzIC5uYW1lIHtcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgZmxleC1ncm93OiAxOyAvKiBBbGxvd3MgdGhlIG5hbWUgdG8gdGFrZSBhdmFpbGFibGUgc3BhY2UgKi9cclxuICBwYWRkaW5nLWxlZnQ6IDAuNWVtOyAvKiBBZGRzIHNvbWUgcGFkZGluZyB0byB0aGUgbGVmdCBvZiB0aGUgbmFtZSAqL1xyXG59XHJcblxyXG4vKiBhcHAuY29tcG9uZW50LmNzcyAqL1xyXG4uaW1hZ2UtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMC41ZW07XHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXIgaW1nIHtcclxuICBib3JkZXItcmFkaXVzOiA3NXB4O1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47IC8qIEVuc3VyZXMgdGhlIGltYWdlIGZpdHMgd2l0aGluIHRoZSBjb250YWluZXIgKi9cclxufVxyXG5cclxuLmltYWdlLWNvbnRhaW5lci12ciB7XHJcbiAgdG9wOiAwOyAvKiBBbGlnbiB0byB0aGUgdG9wIG9mIHRoZSBwYXJlbnQgbGkgKi9cclxuICBsZWZ0OiAwOyAvKiBBbGlnbiB0byB0aGUgbGVmdCBvZiB0aGUgcGFyZW50IGxpICovXHJcbiAgd2lkdGg6IDglOyAvKiBDaGFuZ2VzIHdpZHRoIGNvbXBhcmVkIHRvIHBhcmVudCBsaSAqL1xyXG4gIGhlaWdodDogOCU7IC8qIENoYW5nZXMgd2lkdGggY29tcGFyZWQgdG8gcGFyZW50IGxpICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nOiAxZW07XHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItdnIgaW1nIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgbWF4LWhlaWdodDogMTAwJTtcclxuICBvYmplY3QtZml0OiBjb250YWluOyAvKiBFbnN1cmVzIHRoZSBpbWFnZSBmaXRzIHdpdGhpbiB0aGUgY29udGFpbmVyICovXHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgdG9wOiAwOyAvKiBBbGlnbiB0byB0aGUgdG9wIG9mIHRoZSBwYXJlbnQgbGkgKi9cclxuICBsZWZ0OiAwOyAvKiBBbGlnbiB0byB0aGUgbGVmdCBvZiB0aGUgcGFyZW50IGxpICovXHJcbiAgd2lkdGg6IDglOyAvKiBDaGFuZ2VzIHdpZHRoIGNvbXBhcmVkIHRvIHBhcmVudCBsaSAqL1xyXG4gIGhlaWdodDogOCU7IC8qIENoYW5nZXMgd2lkdGggY29tcGFyZWQgdG8gcGFyZW50IGxpICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nOiAxZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcclxuICBib3JkZXItcmFkaXVzOiAzMHB4OyAvKiAxNXB4IHJhZGl1cyAqL1xyXG59XHJcblxyXG4uaW1hZ2UtY29udGFpbmVyLWJ1dHRvbiBpbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47IC8qIEVuc3VyZXMgdGhlIGltYWdlIGZpdHMgd2l0aGluIHRoZSBjb250YWluZXIgKi9cclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","VRInfoComponent_li_3_Template_input_ngModelChange_6_listener","$event","restoredCtx","ɵɵrestoreView","_r3","headset_r1","$implicit","ɵɵresetView","name","VRInfoComponent_li_3_Template_input_ngModelChange_10_listener","port","VRInfoComponent_li_3_Template_input_ngModelChange_14_listener","VRInfoComponent_li_3_Template_button_click_19_listener","ctx_r6","ɵɵnextContext","sendOSC","ɵɵproperty","ɵɵpureFunction1","_c0","isOnline","ɵɵadvance","ctx_r0","imagePathQuest3","imagePathQuest3Grey","ɵɵsanitizeUrl","ɵɵtextInterpolate1","imagePathDownload","VRInfoComponent","constructor","sseService","cdRef","headsetsList","imagePathPlay","imagePathStopGrey","imagePathRestartGrey","data$","events$","pipe","value","console","log","detectChanges","ngOnInit","fetch","_","ɵɵdirectiveInject","i1","SseService","ChangeDetectorRef","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template","ɵɵpipeBind1"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../../mock-vrInfo';\nimport { SseService } from 'src/app/services/sse-services/sse-services';\nimport { tap } from 'rxjs';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  imagePathQuest3: string = 'assets/images/metaquest3.png';\n  imagePathQuest3Grey: string = 'assets/images/metaquest3_grey.png';\n  imagePathDownload: string = 'assets/images/download_button.png';\n  imagePathPlay: string = 'assets/images/play_button.png';\n  imagePathStopGrey: string = 'assets/images/stop_button_grey.png';\n  imagePathRestartGrey: string = 'assets/images/restart_button_grey.png';\n\n  //Refresh the DOM if receives value from event\n  data$ = this.sseService.events$.pipe(\n    tap((value) => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }))\n\n  constructor(protected readonly sseService: SseService, private cdRef: ChangeDetectorRef) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\")\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>Saved VR List</h1>\n\n<ul class=\"headsets\">\n    <li *ngFor=\"let headset of headsetsList\" [ngClass]=\"{'isOnline': headset.isOnline}\">\n        \n        <div class=\"image-container-vr\">\n          <img [src]=\"headset.isOnline ? imagePathQuest3 : imagePathQuest3Grey\" alt=\"MetaQuest3\">\n        </div>\n        \n        <div>\n            <span class = \"name\" >Name: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.name\">\n        </div>\n\n\n        <div>\n            <span>IpAddress: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.port\">\n\n        </div>\n\n        <div>\n            <span>Port: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.port\">\n        </div>\n\n        <div>\n            <!--We aply the select class to this item, whenever === --->\n            <span>Status: {{ headset.isOnline }}</span>\n            \n        </div>\n\n        <div class=\"image-container\">\n            <button (click)=\"sendOSC()\">\n                <img [src]=\"imagePathDownload\" alt=\"Click here to download VRHeadset assets\">\n            </button>\n        </div>\n    </li>\n\n\n    <div class=\"image-container-button\">\n        <img [src]=\"imagePathPlay\" alt=\"Click here to Start Experience\">\n    </div>\n\n    <!-- Gestao do observable -->\n    <div>{{data$ | async | json}} </div> \n\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}