{"ast":null,"code":"import { HEADSETS } from '../../mock-vrInfo';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/sse-services/sse-services\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"isOnline\": a0\n  };\n};\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\")(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function VRInfoComponent_li_3_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendDownloadAssetsOSC(headset_r1));\n    });\n    i0.ɵɵelement(17, \"img\", 7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, headset_r1.isOnline));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", headset_r1.isOnline ? ctx_r0.imagePathQuest3 : ctx_r0.imagePathQuest3Grey, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Name: \", headset_r1.name, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"IpAdress: \", headset_r1.ipAddress, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Port: \", headset_r1.port, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status: \", headset_r1.isOnline, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePathUpload, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class VRInfoComponent {\n  constructor(sseService, cdRef) {\n    this.sseService = sseService;\n    this.cdRef = cdRef;\n    this.headsetsList = HEADSETS;\n    this.imagePathQuest3 = 'assets/images/metaquest3.png';\n    this.imagePathQuest3Grey = 'assets/images/metaquest3_grey.png';\n    this.imagePathUpload = 'assets/images/upload_button.png';\n    this.imagePathPlay = 'assets/images/play_button.png';\n    this.imagePathStopGrey = 'assets/images/stop_button_grey.png';\n    this.imagePathRestartGrey = 'assets/images/restart_button_grey.png';\n    //Refresh the DOM if receives value from event\n    this.data$ = this.sseService.events$.pipe(tap(value => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }));\n  }\n  ngOnInit() {}\n  sendDownloadAssetsOSC(headset) {\n    const url = \"http://localhost:3000/DownloadAssets\";\n    const data = {\n      ipAddress: headset.ipAddress,\n      port: headset.port\n    };\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success! :', data);\n    }).catch(error => {\n      console.error('Error! :', error);\n    });\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)(i0.ɵɵdirectiveInject(i1.SseService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vr-info\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"headsets\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"image-container-vr\"], [\"alt\", \"MetaQuest3\", 3, \"src\"], [1, \"image-container-button\"], [3, \"click\"], [\"alt\", \"Click here to download VRHeadset assets\", 3, \"src\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Saved VR List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 18, 9, \"li\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf],\n    styles: [\"\\n\\n.headsets[_ngcontent-%COMP%] {\\n  margin: 2%;\\n  list-style-type: none;\\n  padding: 0;\\n  max-width: 1200px; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] { \\n\\n  color: #868686;\\n  background-color: #ffffff;\\n  display: flex;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n\\n  \\n\\n  display: flex;\\n  align-items: center; \\n\\n}\\n\\n\\n\\n.headsets[_ngcontent-%COMP%]   .isOnline[_ngcontent-%COMP%] {\\n  color: #000000;\\n  font-weight: bold; \\n\\n  display: flex;\\n  background-color: #ffffff;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n}\\n.headsets[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%] {\\n  align-self: center;\\n  flex-grow: 1; \\n\\n  padding-left: 0.5em; \\n\\n}\\n\\n\\n\\n.image-container-button[_ngcontent-%COMP%] {\\n  background-color: #D9D9D9; \\n\\n  display: flex;\\n  justify-content: center; \\n\\n  align-items: center; \\n\\n  border-radius: 10px;\\n  padding: 1%;\\n  margin: 2%;\\n  width: 60px; \\n\\n  height: 60px; \\n\\n}\\n\\n.image-container-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background: none; \\n\\n  border: none; \\n\\n  padding: 0; \\n\\n  cursor: pointer; \\n\\n  padding-left: 15%;\\n}\\n\\n.image-container-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 60px; \\n\\n  height: 60px; \\n\\n}\\n\\n.image-container-vr[_ngcontent-%COMP%] {\\n  top: 0; \\n\\n  left: 0; \\n\\n  width: 8%; \\n\\n  height: 8%; \\n\\n  display: flex;\\n  padding: 1em;\\n}\\n.image-container-vr[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy92ci1pbmZvL3ZyLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5Q0FBeUM7QUFDekM7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixpQkFBaUIsRUFBRSx3REFBd0Q7QUFDN0U7O0FBRUEsZUFBZSwrQkFBK0I7RUFDNUMsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFFLG1EQUFtRDtFQUNyRSxrQkFBa0IsRUFBRSxrQ0FBa0M7RUFDdEQsa0JBQWtCLEVBQUUscURBQXFEOztFQUV6RSw0Q0FBNEM7RUFDNUMsYUFBYTtFQUNiLG1CQUFtQixFQUFFLDhCQUE4QjtBQUNyRDs7QUFFQSx3Q0FBd0M7QUFDeEM7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCLEVBQUUseUJBQXlCO0VBQzVDLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFFLG1EQUFtRDtFQUNyRSxrQkFBa0IsRUFBRSxrQ0FBa0M7RUFDdEQsa0JBQWtCLEVBQUUscURBQXFEO0FBQzNFO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWSxFQUFFLDRDQUE0QztFQUMxRCxtQkFBbUIsRUFBRSw4Q0FBOEM7QUFDckU7O0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0UseUJBQXlCLEVBQUUsd0NBQXdDO0VBQ25FLGFBQWE7RUFDYix1QkFBdUIsRUFBRSx3QkFBd0I7RUFDakQsbUJBQW1CLEVBQUUsc0JBQXNCO0VBQzNDLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsVUFBVTtFQUNWLFdBQVcsRUFBRSxzQ0FBc0M7RUFDbkQsWUFBWSxFQUFFLHVDQUF1QztBQUN2RDs7QUFFQTtFQUNFLGdCQUFnQixFQUFFLHFDQUFxQztFQUN2RCxZQUFZLEVBQUUsaUNBQWlDO0VBQy9DLFVBQVUsRUFBRSxrQ0FBa0M7RUFDOUMsZUFBZSxFQUFFLHNDQUFzQztFQUN2RCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxXQUFXLEVBQUUsc0NBQXNDO0VBQ25ELFlBQVksRUFBRSx1Q0FBdUM7QUFDdkQ7O0FBRUE7RUFDRSxNQUFNLEVBQUUsc0NBQXNDO0VBQzlDLE9BQU8sRUFBRSx1Q0FBdUM7RUFDaEQsU0FBUyxFQUFFLHdDQUF3QztFQUNuRCxVQUFVLEVBQUUsd0NBQXdDO0VBQ3BELGFBQWE7RUFDYixZQUFZO0FBQ2Q7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUUsZ0RBQWdEO0FBQ3ZFIiwic291cmNlc0NvbnRlbnQiOlsiLyogSGVyb2VzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcbi5oZWFkc2V0cyB7XHJcbiAgbWFyZ2luOiAyJTtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXgtd2lkdGg6IDEyMDBweDsgLyogRW5zdXJlIHRoZSBjb250YWluZXIgZG9lc24ndCBnZXQgYmlnZ2VyIHRoZW4gMTIwMHB4ICovXHJcbn1cclxuXHJcbi5oZWFkc2V0cyBsaSB7IC8qU3RhbmRhcmQ6IEhlYWRzZXQgaXMgb2ZmbGluZSovXHJcbiAgY29sb3I6ICM4Njg2ODY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogRW5zdXJlcyByb3VuZGVkIGNvcm5lcnMgY29udGFpbiBjaGlsZCBlbGVtZW50cyAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTsgLyogQWRkcyBzcGFjZSBiZXR3ZWVuIGxpc3QgaXRlbXMgKi9cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7IC8qIEVuc3VyZSBwb3NpdGlvbmluZyBjb250ZXh0IGZvciBhYnNvbHV0ZSBjaGlsZHJlbiAqL1xyXG5cclxuICAvKkNvZGUgdG8gbWFrZSBhbGwgZmxleC1jb250YWluZXJzIGNlbnRlcmVkKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlcnMgZGl2cyBob3Jpem9udGFsbHkgKi9cclxufVxyXG5cclxuLyogV3JpdGUgaGVyZSAuaGVhZHNldHMgbGkgLmlzT25saW5lIHsgKi9cclxuLmhlYWRzZXRzIC5pc09ubGluZSB7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIG9yIGZvbnQtd2VpZ2h0OiA3MDA7ICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogRW5zdXJlcyByb3VuZGVkIGNvcm5lcnMgY29udGFpbiBjaGlsZCBlbGVtZW50cyAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTsgLyogQWRkcyBzcGFjZSBiZXR3ZWVuIGxpc3QgaXRlbXMgKi9cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7IC8qIEVuc3VyZSBwb3NpdGlvbmluZyBjb250ZXh0IGZvciBhYnNvbHV0ZSBjaGlsZHJlbiAqL1xyXG59XHJcbi5oZWFkc2V0cyAubmFtZSB7XHJcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gIGZsZXgtZ3JvdzogMTsgLyogQWxsb3dzIHRoZSBuYW1lIHRvIHRha2UgYXZhaWxhYmxlIHNwYWNlICovXHJcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTsgLyogQWRkcyBzb21lIHBhZGRpbmcgdG8gdGhlIGxlZnQgb2YgdGhlIG5hbWUgKi9cclxufVxyXG5cclxuLyogYXBwLmNvbXBvbmVudC5jc3MgKi9cclxuLmltYWdlLWNvbnRhaW5lci1idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEOUQ5RDk7IC8qIEJhY2tncm91bmQgY29sb3IgZm9yIHRoZSBsaXN0IGl0ZW1zICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciB2ZXJ0aWNhbGx5ICovXHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAxJTtcclxuICBtYXJnaW46IDIlO1xyXG4gIHdpZHRoOiA2MHB4OyAvKiBTZXQgYSBmaXhlZCB3aWR0aCBmb3IgdGhlIGJ1dHRvbnMgKi9cclxuICBoZWlnaHQ6IDYwcHg7IC8qIFNldCBhIGZpeGVkIGhlaWdodCBmb3IgdGhlIGJ1dHRvbnMgKi9cclxufVxyXG5cclxuLmltYWdlLWNvbnRhaW5lci1idXR0b24gYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kOiBub25lOyAvKiBSZW1vdmUgZGVmYXVsdCBidXR0b24gYmFja2dyb3VuZCAqL1xyXG4gIGJvcmRlcjogbm9uZTsgLyogUmVtb3ZlIGRlZmF1bHQgYnV0dG9uIGJvcmRlciAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIFJlbW92ZSBkZWZhdWx0IGJ1dHRvbiBwYWRkaW5nICovXHJcbiAgY3Vyc29yOiBwb2ludGVyOyAvKiBDaGFuZ2UgY3Vyc29yIHRvIHBvaW50ZXIgb24gaG92ZXIgKi9cclxuICBwYWRkaW5nLWxlZnQ6IDE1JTtcclxufVxyXG5cclxuLmltYWdlLWNvbnRhaW5lci1idXR0b24gaW1nIHtcclxuICB3aWR0aDogNjBweDsgLyogU2V0IGEgZml4ZWQgd2lkdGggZm9yIHRoZSBidXR0b25zICovXHJcbiAgaGVpZ2h0OiA2MHB4OyAvKiBTZXQgYSBmaXhlZCBoZWlnaHQgZm9yIHRoZSBidXR0b25zICovXHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItdnIge1xyXG4gIHRvcDogMDsgLyogQWxpZ24gdG8gdGhlIHRvcCBvZiB0aGUgcGFyZW50IGxpICovXHJcbiAgbGVmdDogMDsgLyogQWxpZ24gdG8gdGhlIGxlZnQgb2YgdGhlIHBhcmVudCBsaSAqL1xyXG4gIHdpZHRoOiA4JTsgLyogQ2hhbmdlcyB3aWR0aCBjb21wYXJlZCB0byBwYXJlbnQgbGkgKi9cclxuICBoZWlnaHQ6IDglOyAvKiBDaGFuZ2VzIHdpZHRoIGNvbXBhcmVkIHRvIHBhcmVudCBsaSAqL1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZzogMWVtO1xyXG59XHJcbi5pbWFnZS1jb250YWluZXItdnIgaW1nIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgbWF4LWhlaWdodDogMTAwJTtcclxuICBvYmplY3QtZml0OiBjb250YWluOyAvKiBFbnN1cmVzIHRoZSBpbWFnZSBmaXRzIHdpdGhpbiB0aGUgY29udGFpbmVyICovXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","VRInfoComponent_li_3_Template_button_click_16_listener","restoredCtx","ɵɵrestoreView","_r3","headset_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","sendDownloadAssetsOSC","ɵɵproperty","ɵɵpureFunction1","_c0","isOnline","ɵɵadvance","ctx_r0","imagePathQuest3","imagePathQuest3Grey","ɵɵsanitizeUrl","ɵɵtextInterpolate1","name","ipAddress","port","imagePathUpload","VRInfoComponent","constructor","sseService","cdRef","headsetsList","imagePathPlay","imagePathStopGrey","imagePathRestartGrey","data$","events$","pipe","value","console","log","detectChanges","ngOnInit","headset","url","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","_","ɵɵdirectiveInject","i1","SseService","ChangeDetectorRef","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vr-info\\vr-info.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vr-info\\vr-info.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../../mock-vrInfo';\nimport { SseService } from 'src/app/services/sse-services/sse-services';\nimport { tap } from 'rxjs';\n\n@Component({\n  selector: 'app-vr-info',\n  templateUrl: './vr-info.component.html',\n  styleUrls: ['./vr-info.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  imagePathQuest3: string = 'assets/images/metaquest3.png';\n  imagePathQuest3Grey: string = 'assets/images/metaquest3_grey.png';\n  imagePathUpload: string = 'assets/images/upload_button.png';\n  imagePathPlay: string = 'assets/images/play_button.png';\n  imagePathStopGrey: string = 'assets/images/stop_button_grey.png';\n  imagePathRestartGrey: string = 'assets/images/restart_button_grey.png';\n\n\n  //Refresh the DOM if receives value from event\n  data$ = this.sseService.events$.pipe(\n    tap((value) => {\n      console.log(value);\n      this.cdRef.detectChanges();\n    }))\n\n  constructor(protected readonly sseService: SseService, private cdRef: ChangeDetectorRef) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  sendDownloadAssetsOSC(headset: vrInfo) {\n    const url = \"http://localhost:3000/DownloadAssets\";\n    const data = { ipAddress: headset.ipAddress,  port: headset.port};\n\n    fetch(url, {\n      method: 'POST', // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success! :', data);\n    })\n    .catch((error) => {\n      console.error('Error! :', error);\n    });\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>Saved VR List</h1>\n\n<ul class=\"headsets\">\n    <li *ngFor=\"let headset of headsetsList\" [ngClass]=\"{'isOnline': headset.isOnline}\">\n        \n        <div class=\"image-container-vr\">\n          <img [src]=\"headset.isOnline ? imagePathQuest3 : imagePathQuest3Grey\" alt=\"MetaQuest3\">\n        </div>\n        \n        <div>\n            <span>Name: {{ headset.name }}</span>\n        </div>\n        \n        <div>\n            <span>IpAdress: {{ headset.ipAddress }}</span>\n        </div>\n\n        <div>\n            <span>Port: {{ headset.port }}</span>\n        </div>\n\n        <div>\n            <!--We aply the select class to this item, whenever === --->\n            <span>Status: {{ headset.isOnline }}</span>    \n        </div>\n\n        <div class=\"image-container-button\">\n            <button (click)=\"sendDownloadAssetsOSC(headset)\">\n                <img [src]=\"imagePathUpload\" alt=\"Click here to download VRHeadset assets\">\n            </button>\n        </div>\n    </li>\n\n<!--\n    <div class=\"image-container-button\">\n        <img [src]=\"imagePathPlay\" alt=\"Click here to Start Experience\">\n    </div>\n\n    Gestao do observable\n    <div>{{data$ | async | json}} </div>  -->\n\n</ul>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}