{"ast":null,"code":"import { HEADSETS } from '../../mock-vrInfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"isOnline\": a0\n  };\n};\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵelement(4, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"span\");\n    i0.ɵɵtext(7, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"span\");\n    i0.ɵɵtext(11, \"IpAddress: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.ipAdress = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\")(14, \"span\");\n    i0.ɵɵtext(15, \"Port: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const headset_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(headset_r1.port = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\")(18, \"span\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 9);\n    i0.ɵɵelement(21, \"img\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, headset_r1.isOnline));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(headset_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", headset_r1.isOnline ? ctx_r0.imagePathQuest3 : ctx_r0.imagePathQuest3Grey, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.ipAdress);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", headset_r1.port);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status: \", headset_r1.isOnline, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePath, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class VRInfoComponent {\n  constructor() {\n    this.headsetsList = HEADSETS;\n    this.imagePathQuest3 = 'assets/images/metaquest3.png';\n    this.imagePathQuest3Grey = 'assets/images/metaquest3_grey.png';\n    this.imagePath = 'assets/images/downloadAsset.png';\n    this.imagePathPlay = 'assets/images/play_button.png';\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"headsets\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"image-container-button\"], [\"alt\", \"Click here to Start Experience\", 3, \"src\"], [3, \"ngClass\"], [1, \"badge\"], [1, \"image-container-vr\"], [\"alt\", \"MetaQuest3\", 3, \"src\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"image-container\"], [\"alt\", \"Click here for VRHeadset to Download Assets\", 3, \"src\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Saved VR List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 22, 10, \"li\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"src\", ctx.imagePathPlay, i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\\n\\n\\n\\n.headsets[_ngcontent-%COMP%] {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 65em;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  flex: 1;\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #8f8f8f;\\n  margin: .5em;\\n  padding: 0;\\n  border-radius: 10px; \\n\\n  display: flex;\\n  align-items: center; \\n\\n  height: 2.5em;\\n  border: none; \\n\\n  transition: background-color 0.3s, left 0.3s; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] { \\n\\n  color: #868686;\\n  background-color: #ffffff;\\n\\n  display: flex;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   .isOnline[_ngcontent-%COMP%] {\\n  color: #000000;\\n  font-weight: bold; \\n\\n  display: flex;\\n  background-color: #ffffff;\\n  border-radius: 10px;\\n  overflow: hidden; \\n\\n  margin-bottom: 1em; \\n\\n  position: relative; \\n\\n}\\n\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  color: #2c3a41;\\n  background-color: #e6e6e6;\\n  left: .1em;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n  background-color: #525252;\\n  color: #fafafa;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%] {\\n  background-color: black;\\n  color: rgb(255, 0, 0);\\n  \\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:hover {\\n  background-color: #505050;\\n  color: white;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]:active {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.headsets[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #424242;\\n  line-height: 1em;\\n  margin-right: .8em;\\n  display: flex;\\n  align-items: center; \\n\\n  justify-content: center; \\n\\n}\\n\\n.headsets[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%] {\\n  align-self: center;\\n  flex-grow: 1; \\n\\n  padding-left: 0.5em; \\n\\n}\\n\\n\\n\\n.image-container[_ngcontent-%COMP%] {\\n  background-color: grey;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.5em;\\n}\\n\\n.image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n\\n.image-container-vr[_ngcontent-%COMP%] {\\n  top: 0; \\n\\n  left: 0; \\n\\n  width: 8%; \\n\\n  height: 8%; \\n\\n  display: flex;\\n  padding: 1em;\\n}\\n\\n.image-container-vr[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n}\\n\\n.image-container-button[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 255, 255);\\n  top: 0; \\n\\n  left: 0; \\n\\n  width: 8%; \\n\\n  height: 8%; \\n\\n  display: flex;\\n  padding: 1em;\\n}\\n\\n.image-container-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  object-fit: contain; \\n\\n  border: 1px solid #000;\\n  border-radius: 15px; \\n\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy92cmluZm8vdnJpbmZvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUNBQXlDOzs7QUFHekM7RUFDRSxpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixVQUFVO0VBQ1YsbUJBQW1CLEVBQUUsc0NBQXNDO0VBQzNELGFBQWE7RUFDYixtQkFBbUIsRUFBRSwrQkFBK0I7RUFDcEQsYUFBYTtFQUNiLFlBQVksRUFBRSxrQ0FBa0M7RUFDaEQsNENBQTRDLEVBQUUsd0NBQXdDO0FBQ3hGOztBQUVBLGVBQWUsK0JBQStCO0VBQzVDLGNBQWM7RUFDZCx5QkFBeUI7O0VBRXpCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZ0JBQWdCLEVBQUUsbURBQW1EO0VBQ3JFLGtCQUFrQixFQUFFLGtDQUFrQztFQUN0RCxrQkFBa0IsRUFBRSxxREFBcUQ7QUFDM0U7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCLEVBQUUseUJBQXlCO0VBQzVDLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFFLG1EQUFtRDtFQUNyRSxrQkFBa0IsRUFBRSxrQ0FBa0M7RUFDdEQsa0JBQWtCLEVBQUUscURBQXFEO0FBQzNFOzs7QUFHQTtFQUNFLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIsVUFBVTtBQUNaOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIscUJBQXFCOztBQUV2Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixtQkFBbUIsRUFBRSw0QkFBNEI7RUFDakQsdUJBQXVCLEVBQUUsOEJBQThCO0FBQ3pEOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVksRUFBRSw0Q0FBNEM7RUFDMUQsbUJBQW1CLEVBQUUsOENBQThDO0FBQ3JFOztBQUVBLHNCQUFzQjtBQUN0QjtFQUNFLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBRSxnREFBZ0Q7QUFDdkU7O0FBRUE7RUFDRSxNQUFNLEVBQUUsc0NBQXNDO0VBQzlDLE9BQU8sRUFBRSx1Q0FBdUM7RUFDaEQsU0FBUyxFQUFFLHdDQUF3QztFQUNuRCxVQUFVLEVBQUUsd0NBQXdDO0VBQ3BELGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFFLGdEQUFnRDtBQUN2RTs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxNQUFNLEVBQUUsc0NBQXNDO0VBQzlDLE9BQU8sRUFBRSx1Q0FBdUM7RUFDaEQsU0FBUyxFQUFFLHdDQUF3QztFQUNuRCxVQUFVLEVBQUUsd0NBQXdDO0VBQ3BELGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFFLGdEQUFnRDtFQUNyRSxzQkFBc0I7RUFDdEIsbUJBQW1CLEVBQUUsZ0JBQWdCO0FBQ3ZDIiwic291cmNlc0NvbnRlbnQiOlsiLyogSGVyb2VzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcblxyXG5cclxuLmhlYWRzZXRzIHtcclxuICBtYXJnaW46IDAgMCAyZW0gMDtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICB3aWR0aDogNjVlbTtcclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbiB7XHJcbiAgZmxleDogMTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzhmOGY4ZjtcclxuICBtYXJnaW46IC41ZW07XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4OyAvKiBSb3VuZHMgdGhlIGNvcm5lcnMgb2YgdGhlIGJ1dHRvbnMgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlcnMgY29udGVudCB2ZXJ0aWNhbGx5ICovXHJcbiAgaGVpZ2h0OiAyLjVlbTtcclxuICBib3JkZXI6IG5vbmU7IC8qIFJlbW92ZXMgZGVmYXVsdCBidXR0b24gYm9yZGVyICovXHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBsZWZ0IDAuM3M7IC8qIFNtb290aCB0cmFuc2l0aW9uIGZvciBob3ZlciBlZmZlY3RzICovXHJcbn1cclxuXHJcbi5oZWFkc2V0cyBsaSB7IC8qU3RhbmRhcmQ6IEhlYWRzZXQgaXMgb2ZmbGluZSovXHJcbiAgY29sb3I6ICM4Njg2ODY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47IC8qIEVuc3VyZXMgcm91bmRlZCBjb3JuZXJzIGNvbnRhaW4gY2hpbGQgZWxlbWVudHMgKi9cclxuICBtYXJnaW4tYm90dG9tOiAxZW07IC8qIEFkZHMgc3BhY2UgYmV0d2VlbiBsaXN0IGl0ZW1zICovXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlOyAvKiBFbnN1cmUgcG9zaXRpb25pbmcgY29udGV4dCBmb3IgYWJzb2x1dGUgY2hpbGRyZW4gKi9cclxufVxyXG5cclxuLmhlYWRzZXRzIC5pc09ubGluZSB7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIG9yIGZvbnQtd2VpZ2h0OiA3MDA7ICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLyogRW5zdXJlcyByb3VuZGVkIGNvcm5lcnMgY29udGFpbiBjaGlsZCBlbGVtZW50cyAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTsgLyogQWRkcyBzcGFjZSBiZXR3ZWVuIGxpc3QgaXRlbXMgKi9cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7IC8qIEVuc3VyZSBwb3NpdGlvbmluZyBjb250ZXh0IGZvciBhYnNvbHV0ZSBjaGlsZHJlbiAqL1xyXG59XHJcblxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbjpob3ZlciB7XHJcbiAgY29sb3I6ICMyYzNhNDE7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcclxuICBsZWZ0OiAuMWVtO1xyXG59XHJcblxyXG4uaGVhZHNldHMgYnV0dG9uOmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjtcclxuICBjb2xvcjogI2ZhZmFmYTtcclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgY29sb3I6IHJnYigyNTUsIDAsIDApO1xyXG4gIFxyXG59XHJcblxyXG4uaGVhZHNldHMgYnV0dG9uLnNlbGVjdGVkOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTA1MDUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmhlYWRzZXRzIGJ1dHRvbi5zZWxlY3RlZDphY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmhlYWRzZXRzIC5iYWRnZSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQyNDI0MjtcclxuICBsaW5lLWhlaWdodDogMWVtO1xyXG4gIG1hcmdpbi1yaWdodDogLjhlbTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlcnMgdGV4dCB2ZXJ0aWNhbGx5ICovXHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIENlbnRlcnMgdGV4dCBob3Jpem9udGFsbHkgKi9cclxufVxyXG5cclxuLmhlYWRzZXRzIC5uYW1lIHtcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgZmxleC1ncm93OiAxOyAvKiBBbGxvd3MgdGhlIG5hbWUgdG8gdGFrZSBhdmFpbGFibGUgc3BhY2UgKi9cclxuICBwYWRkaW5nLWxlZnQ6IDAuNWVtOyAvKiBBZGRzIHNvbWUgcGFkZGluZyB0byB0aGUgbGVmdCBvZiB0aGUgbmFtZSAqL1xyXG59XHJcblxyXG4vKiBhcHAuY29tcG9uZW50LmNzcyAqL1xyXG4uaW1hZ2UtY29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwYWRkaW5nOiAwLjVlbTtcclxufVxyXG5cclxuLmltYWdlLWNvbnRhaW5lciBpbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47IC8qIEVuc3VyZXMgdGhlIGltYWdlIGZpdHMgd2l0aGluIHRoZSBjb250YWluZXIgKi9cclxufVxyXG5cclxuLmltYWdlLWNvbnRhaW5lci12ciB7XHJcbiAgdG9wOiAwOyAvKiBBbGlnbiB0byB0aGUgdG9wIG9mIHRoZSBwYXJlbnQgbGkgKi9cclxuICBsZWZ0OiAwOyAvKiBBbGlnbiB0byB0aGUgbGVmdCBvZiB0aGUgcGFyZW50IGxpICovXHJcbiAgd2lkdGg6IDglOyAvKiBDaGFuZ2VzIHdpZHRoIGNvbXBhcmVkIHRvIHBhcmVudCBsaSAqL1xyXG4gIGhlaWdodDogOCU7IC8qIENoYW5nZXMgd2lkdGggY29tcGFyZWQgdG8gcGFyZW50IGxpICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nOiAxZW07XHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItdnIgaW1nIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgbWF4LWhlaWdodDogMTAwJTtcclxuICBvYmplY3QtZml0OiBjb250YWluOyAvKiBFbnN1cmVzIHRoZSBpbWFnZSBmaXRzIHdpdGhpbiB0aGUgY29udGFpbmVyICovXHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgdG9wOiAwOyAvKiBBbGlnbiB0byB0aGUgdG9wIG9mIHRoZSBwYXJlbnQgbGkgKi9cclxuICBsZWZ0OiAwOyAvKiBBbGlnbiB0byB0aGUgbGVmdCBvZiB0aGUgcGFyZW50IGxpICovXHJcbiAgd2lkdGg6IDglOyAvKiBDaGFuZ2VzIHdpZHRoIGNvbXBhcmVkIHRvIHBhcmVudCBsaSAqL1xyXG4gIGhlaWdodDogOCU7IC8qIENoYW5nZXMgd2lkdGggY29tcGFyZWQgdG8gcGFyZW50IGxpICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nOiAxZW07XHJcbn1cclxuXHJcbi5pbWFnZS1jb250YWluZXItYnV0dG9uIGltZyB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjsgLyogRW5zdXJlcyB0aGUgaW1hZ2UgZml0cyB3aXRoaW4gdGhlIGNvbnRhaW5lciAqL1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDsgLyogMTVweCByYWRpdXMgKi9cclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","VRInfoComponent_li_3_Template_input_ngModelChange_8_listener","$event","restoredCtx","ɵɵrestoreView","_r3","headset_r1","$implicit","ɵɵresetView","name","VRInfoComponent_li_3_Template_input_ngModelChange_12_listener","ipAdress","VRInfoComponent_li_3_Template_input_ngModelChange_16_listener","port","ɵɵproperty","ɵɵpureFunction1","_c0","isOnline","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","imagePathQuest3","imagePathQuest3Grey","ɵɵsanitizeUrl","ɵɵtextInterpolate1","imagePath","VRInfoComponent","constructor","headsetsList","imagePathPlay","ngOnInit","sendOSC","fetch","_","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\components\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../../mock-vrInfo';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  imagePathQuest3: string = 'assets/images/metaquest3.png';\n  imagePathQuest3Grey: string = 'assets/images/metaquest3_grey.png';\n  imagePath: string = 'assets/images/downloadAsset.png';\n  imagePathPlay: string = 'assets/images/play_button.png';\n\n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\")\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>Saved VR List</h1>\n\n<ul class=\"headsets\">\n    <li *ngFor=\"let headset of headsetsList\" [ngClass]=\"{'isOnline': headset.isOnline}\">\n        <span class=\"badge\">{{ headset.name }}</span>\n        \n        <div class=\"image-container-vr\">\n          <img [src]=\"headset.isOnline ? imagePathQuest3 : imagePathQuest3Grey\" alt=\"MetaQuest3\">\n        </div>\n        \n        <div>\n            <span>Name: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.name\">\n        </div>\n\n\n        <div>\n            <span>IpAddress: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.ipAdress\">\n        </div>\n\n        <div>\n            <span>Port: </span>\n            <input type=\"text\" [(ngModel)]=\"headset.port\">\n        </div>\n\n        <div>\n            <!--We aply the select class to this item, whenever === --->\n            <span>Status: {{ headset.isOnline }}</span>\n            \n        </div>\n\n        <div class=\"image-container\">\n            <img [src]=\"imagePath\" alt=\"Click here for VRHeadset to Download Assets\">\n        </div>\n  \n\n    </li>\n\n\n    <div class=\"image-container-button\">\n        <img [src]=\"imagePathPlay\" alt=\"Click here to Start Experience\">\n    </div>\n\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}