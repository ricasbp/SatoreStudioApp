{"ast":null,"code":"import { HEADSETS } from '../mock-vrInfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction VRInfoComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"label\", 3);\n    i0.ɵɵtext(5, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function VRInfoComponent_li_3_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.vrinfo1.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" Two way data-binding \");\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const headset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", headset_r1.id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", headset_r1.name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.vrinfo1.name);\n  }\n}\nexport class VRInfoComponent {\n  constructor() {\n    this.headsetsList = HEADSETS;\n  }\n  ngOnInit() {}\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n  static #_ = this.ɵfac = function VRInfoComponent_Factory(t) {\n    return new (t || VRInfoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInfoComponent,\n    selectors: [[\"app-vrinfo\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"Headsets\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\"], [\"for\", \"\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function VRInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"VR list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\", 0);\n        i0.ɵɵtemplate(3, VRInfoComponent_li_3_Template, 9, 3, \"li\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headsetsList);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HEADSETS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VRInfoComponent_li_3_Template_input_ngModelChange_6_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","vrinfo1","name","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","headset_r1","id","ɵɵproperty","ctx_r0","VRInfoComponent","constructor","headsetsList","ngOnInit","sendOSC","fetch","_","_2","selectors","decls","vars","consts","template","VRInfoComponent_Template","rf","ctx","ɵɵtemplate","VRInfoComponent_li_3_Template"],"sources":["C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.ts","C:\\Users\\tmart\\Desktop\\Dissertacao\\SatoreApp\\angular\\src\\app\\vrinfo\\vrinfo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { vrInfo } from 'src/vrInfo';\nimport { HEADSETS } from '../mock-vrInfo';\n\n@Component({\n  selector: 'app-vrinfo',\n  templateUrl: './vrinfo.component.html',\n  styleUrls: ['./vrinfo.component.css']\n})\nexport class VRInfoComponent implements OnInit {\n\n  headsetsList = HEADSETS; \n\n  ngOnInit(): void {\n  }\n\n  sendOSC() {\n    fetch(\"http://localhost:3000/VRHeadsets\");\n    //http://localhost:3000/DownloadAssets/VR1\n  }\n\n}\n","<!--\n<h1> {{ vrinfo1.name }} Headset added</h1>\n\n\n<div>\n    <label for=\"\">Name: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n    <br>\n    <label for=\"\">IpAdress: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.ipAdress\"> \n    <br>\n    <label for=\"\">Port: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.port\"> \n    <br>\n    <label for=\"\">Status: </label>\n    <input type= \"text\" [(ngModel)] =\"vrinfo1.currentStatusEnum\"> \n\n    <br>\n    <button (click)=\"sendOSC()\"> Click me for OSC Message to {{ vrinfo1.name }}</button>\n\n</div>\n-->\n\n<h1>VR list</h1>\n\n<ul class= \"Headsets\">\n    <li *ngFor =\"let headset of headsetsList\">\n        <span class = \"badge\"> {{headset.id}} </span> {{headset.name}}\n        <label for=\"\">Name: </label>\n        <input type= \"text\" [(ngModel)] =\"vrinfo1.name\"> Two way data-binding\n        <br>\n    </li>\n</ul>\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,gBAAgB;;;;;;;ICwBrCC,EAAA,CAAAC,cAAA,SAA0C;IACfD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAACH,EAAA,CAAAE,MAAA,GAC9C;IAAAF,EAAA,CAAAC,cAAA,eAAc;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC5BH,EAAA,CAAAC,cAAA,eAAgD;IAA5BD,EAAA,CAAAI,UAAA,2BAAAC,6DAAAC,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAcV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,OAAA,CAAAC,IAAA,GAAAP,MAAA,CAAoB;IAAA,EAAP;IAA/CN,EAAA,CAAAG,YAAA,EAAgD;IAACH,EAAA,CAAAE,MAAA,6BACjD;IAAAF,EAAA,CAAAc,SAAA,SAAI;IACRd,EAAA,CAAAG,YAAA,EAAK;;;;;IAJsBH,EAAA,CAAAe,SAAA,GAAe;IAAff,EAAA,CAAAgB,kBAAA,MAAAC,UAAA,CAAAC,EAAA,MAAe;IAAQlB,EAAA,CAAAe,SAAA,GAC9C;IAD8Cf,EAAA,CAAAgB,kBAAA,MAAAC,UAAA,CAAAJ,IAAA,MAC9C;IACoBb,EAAA,CAAAe,SAAA,GAA2B;IAA3Bf,EAAA,CAAAmB,UAAA,YAAAC,MAAA,CAAAR,OAAA,CAAAC,IAAA,CAA2B;;;ADpBvD,OAAM,MAAOQ,eAAe;EAL5BC,YAAA;IAOE,KAAAC,YAAY,GAAGxB,QAAQ;;EAEvByB,QAAQA,CAAA,GACR;EAEAC,OAAOA,CAAA;IACLC,KAAK,CAAC,kCAAkC,CAAC;IACzC;EACF;EAAC,QAAAC,CAAA,G;qBAVUN,eAAe;EAAA;EAAA,QAAAO,EAAA,G;UAAfP,eAAe;IAAAQ,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCc5BnC,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,cAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEhBH,EAAA,CAAAC,cAAA,YAAsB;QAClBD,EAAA,CAAAqC,UAAA,IAAAC,6BAAA,gBAKK;QACTtC,EAAA,CAAAG,YAAA,EAAK;;;QANwBH,EAAA,CAAAe,SAAA,GAAe;QAAff,EAAA,CAAAmB,UAAA,YAAAiB,GAAA,CAAAb,YAAA,CAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}